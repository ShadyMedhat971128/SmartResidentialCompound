
FINAL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  000019ae  00001a42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000024  008000c4  008000c4  00001aa6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001aa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ad8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00001b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026a5  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ff3  00000000  00000000  00004451  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000186a  00000000  00000000  00005444  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005f4  00000000  00000000  00006cb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000809  00000000  00000000  000072a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000025b7  00000000  00000000  00007aad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000a064  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__vector_1>
       8:	0c 94 3b 03 	jmp	0x676	; 0x676 <__vector_2>
       c:	0c 94 18 04 	jmp	0x830	; 0x830 <__vector_3>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 a1 04 	jmp	0x942	; 0x942 <__vector_5>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 ad 03 	jmp	0x75a	; 0x75a <__vector_11>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__vector_5+0x6c>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__vector_2+0x24>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <__vector_1+0x1a>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <main+0x16>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ee ea       	ldi	r30, 0xAE	; 174
     162:	f9 e1       	ldi	r31, 0x19	; 25
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a4 3c       	cpi	r26, 0xC4	; 196
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a4 ec       	ldi	r26, 0xC4	; 196
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a8 3e       	cpi	r26, 0xE8	; 232
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <main>
     184:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <boundary_watch_init>:
int GAS_MSG=0;
int ULTRA_MSG=0; 

void boundary_watch_init()
{
	LCD_INIT_4BIT();
     18c:	0e 94 a0 02 	call	0x540	; 0x540 <LCD_INIT_4BIT>
	BUZZER_INIT();
     190:	0e 94 2f 02 	call	0x45e	; 0x45e <BUZZER_INIT>
	//LCD_INIT_4BIT();
	//BUZZER_ONCE_LONG();
	//LED_INIT(RIGHT_LED);
	PIN_MODE(PD2,INPUT);
     194:	60 e0       	ldi	r22, 0x00	; 0
     196:	8a e2       	ldi	r24, 0x2A	; 42
     198:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	ENABLE_INT0(FALLING_EDGE_MODE);
     19c:	82 e0       	ldi	r24, 0x02	; 2
     19e:	0e 94 57 08 	call	0x10ae	; 0x10ae <ENABLE_INT0>
     1a2:	08 95       	ret

000001a4 <main>:
}

int main(void)
{
	
    BUZZER_INIT();
     1a4:	0e 94 2f 02 	call	0x45e	; 0x45e <BUZZER_INIT>
	ADC_INIT();
     1a8:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <ADC_INIT>
	LCD_INIT_4BIT();
     1ac:	0e 94 a0 02 	call	0x540	; 0x540 <LCD_INIT_4BIT>
	ULTRASONIC_INIT();
     1b0:	0e 94 ee 03 	call	0x7dc	; 0x7dc <ULTRASONIC_INIT>
	WATER_INIT();
     1b4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <WATER_INIT>
	boundary_watch_init();
     1b8:	0e 94 c6 00 	call	0x18c	; 0x18c <boundary_watch_init>
	LCD_CLEAR();
     1bc:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
	LCD_DISPLAY("LCD checked");
     1c0:	81 e6       	ldi	r24, 0x61	; 97
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
    while (1) 
    {
		 //----------------------//
		/**ULTRA SONIC SENSOR**/
	   //----------------------//
		ULTRASONIC_TRIG_PULSE();
     1c8:	0e 94 ff 03 	call	0x7fe	; 0x7fe <ULTRASONIC_TRIG_PULSE>
		
		if(get_US_distance() < 3)
     1cc:	0e 94 2e 03 	call	0x65c	; 0x65c <get_US_distance>
     1d0:	63 30       	cpi	r22, 0x03	; 3
     1d2:	71 05       	cpc	r23, r1
     1d4:	81 05       	cpc	r24, r1
     1d6:	91 05       	cpc	r25, r1
     1d8:	c8 f5       	brcc	.+114    	; 0x24c <main+0xa8>
		{
			BUZZER_ON();
     1da:	0e 94 34 02 	call	0x468	; 0x468 <BUZZER_ON>
			if (ULTRA_MSG==0)
     1de:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
     1e2:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <__data_end+0x1>
     1e6:	89 2b       	or	r24, r25
     1e8:	09 f0       	breq	.+2      	; 0x1ec <main+0x48>
     1ea:	74 c0       	rjmp	.+232    	; 0x2d4 <main+0x130>
			{
				UART_INIT();
     1ec:	0e 94 8d 08 	call	0x111a	; 0x111a <UART_INIT>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1f0:	2f ef       	ldi	r18, 0xFF	; 255
     1f2:	83 ed       	ldi	r24, 0xD3	; 211
     1f4:	90 e3       	ldi	r25, 0x30	; 48
     1f6:	21 50       	subi	r18, 0x01	; 1
     1f8:	80 40       	sbci	r24, 0x00	; 0
     1fa:	90 40       	sbci	r25, 0x00	; 0
     1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x52>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x5c>
     200:	00 00       	nop
				_delay_ms(1000);
				//UART_TRANSMIT_STR("Sewage Problem*");
				UART_TRANSMIT_STR("s*");
     202:	8d e6       	ldi	r24, 0x6D	; 109
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_TRANSMIT_STR>
     20a:	2f ef       	ldi	r18, 0xFF	; 255
     20c:	89 e6       	ldi	r24, 0x69	; 105
     20e:	98 e1       	ldi	r25, 0x18	; 24
     210:	21 50       	subi	r18, 0x01	; 1
     212:	80 40       	sbci	r24, 0x00	; 0
     214:	90 40       	sbci	r25, 0x00	; 0
     216:	e1 f7       	brne	.-8      	; 0x210 <main+0x6c>
     218:	00 c0       	rjmp	.+0      	; 0x21a <main+0x76>
     21a:	00 00       	nop
				_delay_ms(500);
				LCD_CLEAR();
     21c:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
				LCD_DISPLAY("Sewage Problem 2");
     220:	80 e7       	ldi	r24, 0x70	; 112
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     228:	2f ef       	ldi	r18, 0xFF	; 255
     22a:	89 e6       	ldi	r24, 0x69	; 105
     22c:	98 e1       	ldi	r25, 0x18	; 24
     22e:	21 50       	subi	r18, 0x01	; 1
     230:	80 40       	sbci	r24, 0x00	; 0
     232:	90 40       	sbci	r25, 0x00	; 0
     234:	e1 f7       	brne	.-8      	; 0x22e <main+0x8a>
     236:	00 c0       	rjmp	.+0      	; 0x238 <main+0x94>
     238:	00 00       	nop
				
				_delay_ms(500);
				LCD_CLEAR();
     23a:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
				ULTRA_MSG=1;
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__data_end+0x1>
     246:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__data_end>
     24a:	44 c0       	rjmp	.+136    	; 0x2d4 <main+0x130>
			}
		}
			else if ( get_US_distance()>=4) 
     24c:	0e 94 2e 03 	call	0x65c	; 0x65c <get_US_distance>
     250:	64 30       	cpi	r22, 0x04	; 4
     252:	71 05       	cpc	r23, r1
     254:	81 05       	cpc	r24, r1
     256:	91 05       	cpc	r25, r1
     258:	e8 f1       	brcs	.+122    	; 0x2d4 <main+0x130>
			{
				BUZZER_OFF();
     25a:	0e 94 3b 02 	call	0x476	; 0x476 <BUZZER_OFF>
				if (ULTRA_MSG==1)
     25e:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <__data_end>
     262:	90 91 c5 00 	lds	r25, 0x00C5	; 0x8000c5 <__data_end+0x1>
     266:	01 97       	sbiw	r24, 0x01	; 1
     268:	a9 f5       	brne	.+106    	; 0x2d4 <main+0x130>
				{
					UART_INIT();
     26a:	0e 94 8d 08 	call	0x111a	; 0x111a <UART_INIT>
     26e:	2f ef       	ldi	r18, 0xFF	; 255
     270:	83 ed       	ldi	r24, 0xD3	; 211
     272:	90 e3       	ldi	r25, 0x30	; 48
     274:	21 50       	subi	r18, 0x01	; 1
     276:	80 40       	sbci	r24, 0x00	; 0
     278:	90 40       	sbci	r25, 0x00	; 0
     27a:	e1 f7       	brne	.-8      	; 0x274 <main+0xd0>
     27c:	00 c0       	rjmp	.+0      	; 0x27e <main+0xda>
     27e:	00 00       	nop
					_delay_ms(1000);
					//UART_TRANSMIT_STR("Sewage Problem Cleared*");
					UART_TRANSMIT_STR("c*");
     280:	81 e8       	ldi	r24, 0x81	; 129
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_TRANSMIT_STR>
     288:	2f ef       	ldi	r18, 0xFF	; 255
     28a:	89 e6       	ldi	r24, 0x69	; 105
     28c:	98 e1       	ldi	r25, 0x18	; 24
     28e:	21 50       	subi	r18, 0x01	; 1
     290:	80 40       	sbci	r24, 0x00	; 0
     292:	90 40       	sbci	r25, 0x00	; 0
     294:	e1 f7       	brne	.-8      	; 0x28e <main+0xea>
     296:	00 c0       	rjmp	.+0      	; 0x298 <main+0xf4>
     298:	00 00       	nop
					_delay_ms(500);
					LCD_CLEAR();
     29a:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
					LCD_DISPLAY("Sewage Problem 2");
     29e:	80 e7       	ldi	r24, 0x70	; 112
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
					LCD_GO_TO(2,5);
     2a6:	65 e0       	ldi	r22, 0x05	; 5
     2a8:	82 e0       	ldi	r24, 0x02	; 2
     2aa:	0e 94 ff 02 	call	0x5fe	; 0x5fe <LCD_GO_TO>
					LCD_DISPLAY("cleared");
     2ae:	84 e8       	ldi	r24, 0x84	; 132
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     2b6:	2f ef       	ldi	r18, 0xFF	; 255
     2b8:	89 e6       	ldi	r24, 0x69	; 105
     2ba:	98 e1       	ldi	r25, 0x18	; 24
     2bc:	21 50       	subi	r18, 0x01	; 1
     2be:	80 40       	sbci	r24, 0x00	; 0
     2c0:	90 40       	sbci	r25, 0x00	; 0
     2c2:	e1 f7       	brne	.-8      	; 0x2bc <main+0x118>
     2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x122>
     2c6:	00 00       	nop
					_delay_ms(500);
					LCD_CLEAR();
     2c8:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
					ULTRA_MSG=0;
     2cc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__data_end+0x1>
     2d0:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
	   //----------------------//
		 
		 
		 
		 
			if (ADC_READ()>200)
     2d4:	0e 94 13 05 	call	0xa26	; 0xa26 <ADC_READ>
     2d8:	89 3c       	cpi	r24, 0xC9	; 201
     2da:	91 05       	cpc	r25, r1
     2dc:	08 f4       	brcc	.+2      	; 0x2e0 <main+0x13c>
     2de:	74 cf       	rjmp	.-280    	; 0x1c8 <main+0x24>
			{
				if(ADC_READ()>300)
     2e0:	0e 94 13 05 	call	0xa26	; 0xa26 <ADC_READ>
     2e4:	8d 32       	cpi	r24, 0x2D	; 45
     2e6:	91 40       	sbci	r25, 0x01	; 1
     2e8:	80 f1       	brcs	.+96     	; 0x34a <main+0x1a6>
				{
					BUZZER_ON();
     2ea:	0e 94 34 02 	call	0x468	; 0x468 <BUZZER_ON>
					if (GAS_MSG==0)
     2ee:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <GAS_MSG>
     2f2:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <GAS_MSG+0x1>
     2f6:	89 2b       	or	r24, r25
     2f8:	09 f0       	breq	.+2      	; 0x2fc <main+0x158>
     2fa:	66 cf       	rjmp	.-308    	; 0x1c8 <main+0x24>
					{
						UART_INIT();
     2fc:	0e 94 8d 08 	call	0x111a	; 0x111a <UART_INIT>
     300:	8f ef       	ldi	r24, 0xFF	; 255
     302:	93 ed       	ldi	r25, 0xD3	; 211
     304:	20 e3       	ldi	r18, 0x30	; 48
     306:	81 50       	subi	r24, 0x01	; 1
     308:	90 40       	sbci	r25, 0x00	; 0
     30a:	20 40       	sbci	r18, 0x00	; 0
     30c:	e1 f7       	brne	.-8      	; 0x306 <main+0x162>
     30e:	00 c0       	rjmp	.+0      	; 0x310 <main+0x16c>
     310:	00 00       	nop
						_delay_ms(1000);
						//UART_TRANSMIT_STR("GAS leak*");
						UART_TRANSMIT_STR("g*");
     312:	8c e8       	ldi	r24, 0x8C	; 140
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_TRANSMIT_STR>
						LCD_CLEAR();
     31a:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
						LCD_DISPLAY("GAS leak 2");
     31e:	8f e8       	ldi	r24, 0x8F	; 143
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     326:	8f ef       	ldi	r24, 0xFF	; 255
     328:	93 ed       	ldi	r25, 0xD3	; 211
     32a:	20 e3       	ldi	r18, 0x30	; 48
     32c:	81 50       	subi	r24, 0x01	; 1
     32e:	90 40       	sbci	r25, 0x00	; 0
     330:	20 40       	sbci	r18, 0x00	; 0
     332:	e1 f7       	brne	.-8      	; 0x32c <main+0x188>
     334:	00 c0       	rjmp	.+0      	; 0x336 <main+0x192>
     336:	00 00       	nop
						_delay_ms(1000);
						LCD_CLEAR();
     338:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
						GAS_MSG=1;
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <GAS_MSG+0x1>
     344:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <GAS_MSG>
     348:	3f cf       	rjmp	.-386    	; 0x1c8 <main+0x24>
					
					
					
				}
				
				else if (ADC_READ()<=200)
     34a:	0e 94 13 05 	call	0xa26	; 0xa26 <ADC_READ>
     34e:	89 3c       	cpi	r24, 0xC9	; 201
     350:	91 05       	cpc	r25, r1
     352:	08 f0       	brcs	.+2      	; 0x356 <main+0x1b2>
     354:	39 cf       	rjmp	.-398    	; 0x1c8 <main+0x24>
				{
					BUZZER_OFF();
     356:	0e 94 3b 02 	call	0x476	; 0x476 <BUZZER_OFF>
					if (GAS_MSG==1)
     35a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <GAS_MSG>
     35e:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <GAS_MSG+0x1>
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	09 f0       	breq	.+2      	; 0x368 <main+0x1c4>
     366:	30 cf       	rjmp	.-416    	; 0x1c8 <main+0x24>
					{
						UART_INIT();
     368:	0e 94 8d 08 	call	0x111a	; 0x111a <UART_INIT>
     36c:	8f ef       	ldi	r24, 0xFF	; 255
     36e:	93 ed       	ldi	r25, 0xD3	; 211
     370:	20 e3       	ldi	r18, 0x30	; 48
     372:	81 50       	subi	r24, 0x01	; 1
     374:	90 40       	sbci	r25, 0x00	; 0
     376:	20 40       	sbci	r18, 0x00	; 0
     378:	e1 f7       	brne	.-8      	; 0x372 <main+0x1ce>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <main+0x1d8>
     37c:	00 00       	nop
						_delay_ms(1000);
						//UART_TRANSMIT_STR("GAS leakage problem cleared*");
						UART_TRANSMIT_STR("j*");
     37e:	8a e9       	ldi	r24, 0x9A	; 154
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_TRANSMIT_STR>
						
						LCD_CLEAR();
     386:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
						LCD_DISPLAY("GAS 2 CLEAR");
     38a:	8d e9       	ldi	r24, 0x9D	; 157
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     392:	8f ef       	ldi	r24, 0xFF	; 255
     394:	93 ed       	ldi	r25, 0xD3	; 211
     396:	20 e3       	ldi	r18, 0x30	; 48
     398:	81 50       	subi	r24, 0x01	; 1
     39a:	90 40       	sbci	r25, 0x00	; 0
     39c:	20 40       	sbci	r18, 0x00	; 0
     39e:	e1 f7       	brne	.-8      	; 0x398 <main+0x1f4>
     3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <main+0x1fe>
     3a2:	00 00       	nop
						_delay_ms(1000);
						LCD_CLEAR();
     3a4:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
						GAS_MSG=0;
     3a8:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <GAS_MSG+0x1>
     3ac:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <GAS_MSG>
     3b0:	0b cf       	rjmp	.-490    	; 0x1c8 <main+0x24>

000003b2 <__vector_1>:




ISR(INT0_vect)
{
     3b2:	1f 92       	push	r1
     3b4:	0f 92       	push	r0
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	0f 92       	push	r0
     3ba:	11 24       	eor	r1, r1
     3bc:	2f 93       	push	r18
     3be:	3f 93       	push	r19
     3c0:	4f 93       	push	r20
     3c2:	5f 93       	push	r21
     3c4:	6f 93       	push	r22
     3c6:	7f 93       	push	r23
     3c8:	8f 93       	push	r24
     3ca:	9f 93       	push	r25
     3cc:	af 93       	push	r26
     3ce:	bf 93       	push	r27
     3d0:	ef 93       	push	r30
     3d2:	ff 93       	push	r31
	
	//key=1;
	UART_INIT();
     3d4:	0e 94 8d 08 	call	0x111a	; 0x111a <UART_INIT>
     3d8:	2f ef       	ldi	r18, 0xFF	; 255
     3da:	83 ed       	ldi	r24, 0xD3	; 211
     3dc:	90 e3       	ldi	r25, 0x30	; 48
     3de:	21 50       	subi	r18, 0x01	; 1
     3e0:	80 40       	sbci	r24, 0x00	; 0
     3e2:	90 40       	sbci	r25, 0x00	; 0
     3e4:	e1 f7       	brne	.-8      	; 0x3de <__vector_1+0x2c>
     3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <__vector_1+0x36>
     3e8:	00 00       	nop
	_delay_ms(1000);
	//UART_TRANSMIT_STR("break in detected !!!*");
	UART_TRANSMIT_STR("b*");
     3ea:	89 ea       	ldi	r24, 0xA9	; 169
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	0e 94 9d 08 	call	0x113a	; 0x113a <UART_TRANSMIT_STR>
     3f2:	2f ef       	ldi	r18, 0xFF	; 255
     3f4:	89 e6       	ldi	r24, 0x69	; 105
     3f6:	98 e1       	ldi	r25, 0x18	; 24
     3f8:	21 50       	subi	r18, 0x01	; 1
     3fa:	80 40       	sbci	r24, 0x00	; 0
     3fc:	90 40       	sbci	r25, 0x00	; 0
     3fe:	e1 f7       	brne	.-8      	; 0x3f8 <__vector_1+0x46>
     400:	00 c0       	rjmp	.+0      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     402:	00 00       	nop
	_delay_ms(500);
	LCD_CLEAR();
     404:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
	LCD_DISPLAY("break in 2 detected !!!");
     408:	8c ea       	ldi	r24, 0xAC	; 172
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     410:	2f ef       	ldi	r18, 0xFF	; 255
     412:	87 ea       	ldi	r24, 0xA7	; 167
     414:	91 e6       	ldi	r25, 0x61	; 97
     416:	21 50       	subi	r18, 0x01	; 1
     418:	80 40       	sbci	r24, 0x00	; 0
     41a:	90 40       	sbci	r25, 0x00	; 0
     41c:	e1 f7       	brne	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     420:	00 00       	nop
	_delay_ms(2000);
    
	BUZZER_ON();
     422:	0e 94 34 02 	call	0x468	; 0x468 <BUZZER_ON>
     426:	2f ef       	ldi	r18, 0xFF	; 255
     428:	87 ea       	ldi	r24, 0xA7	; 167
     42a:	91 e6       	ldi	r25, 0x61	; 97
     42c:	21 50       	subi	r18, 0x01	; 1
     42e:	80 40       	sbci	r24, 0x00	; 0
     430:	90 40       	sbci	r25, 0x00	; 0
     432:	e1 f7       	brne	.-8      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     434:	00 c0       	rjmp	.+0      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
     436:	00 00       	nop
	_delay_ms(2000); // edited time later
	BUZZER_OFF();
     438:	0e 94 3b 02 	call	0x476	; 0x476 <BUZZER_OFF>
	
     43c:	ff 91       	pop	r31
     43e:	ef 91       	pop	r30
     440:	bf 91       	pop	r27
     442:	af 91       	pop	r26
     444:	9f 91       	pop	r25
     446:	8f 91       	pop	r24
     448:	7f 91       	pop	r23
     44a:	6f 91       	pop	r22
     44c:	5f 91       	pop	r21
     44e:	4f 91       	pop	r20
     450:	3f 91       	pop	r19
     452:	2f 91       	pop	r18
     454:	0f 90       	pop	r0
     456:	0f be       	out	0x3f, r0	; 63
     458:	0f 90       	pop	r0
     45a:	1f 90       	pop	r1
     45c:	18 95       	reti

0000045e <BUZZER_INIT>:
#include "BUZZER.h"
#include "BUZZER_CFG.h"

void BUZZER_INIT (void)          // function to initialize the buzzer
{
	PIN_MODE(BUZZER_PIN,OUTPUT); // setting the buzzer pin to be output
     45e:	61 e0       	ldi	r22, 0x01	; 1
     460:	83 e2       	ldi	r24, 0x23	; 35
     462:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     466:	08 95       	ret

00000468 <BUZZER_ON>:
}

void BUZZER_ON (void)            // function to turn the buzzer ON
{
	BUZZER_INIT();
     468:	0e 94 2f 02 	call	0x45e	; 0x45e <BUZZER_INIT>
	PIN_WRITE(BUZZER_PIN,HIGH);  // turning the buzzer ON
     46c:	61 e0       	ldi	r22, 0x01	; 1
     46e:	83 e2       	ldi	r24, 0x23	; 35
     470:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     474:	08 95       	ret

00000476 <BUZZER_OFF>:
	
}

void BUZZER_OFF (void)           // function to turn the buzzer OFF
{
	PIN_WRITE(BUZZER_PIN,LOW);   // turning the buzzer off
     476:	60 e0       	ldi	r22, 0x00	; 0
     478:	83 e2       	ldi	r24, 0x23	; 35
     47a:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     47e:	08 95       	ret

00000480 <LCD_SEND_CHAR_4BIT_MODE>:
	if(tenth!=0)
	{
		LCD_DISPLAY_INT(tenth);
	}
	LCD_DISPLAY_CHAR(unit+48);
}
     480:	cf 93       	push	r28
     482:	c8 2f       	mov	r28, r24
     484:	8b b3       	in	r24, 0x1b	; 27
     486:	6c 2f       	mov	r22, r28
     488:	66 95       	lsr	r22
     48a:	68 77       	andi	r22, 0x78	; 120
     48c:	87 70       	andi	r24, 0x07	; 7
     48e:	68 2b       	or	r22, r24
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <PORT_WRITE>
     496:	61 e0       	ldi	r22, 0x01	; 1
     498:	8c e0       	ldi	r24, 0x0C	; 12
     49a:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     49e:	8f e9       	ldi	r24, 0x9F	; 159
     4a0:	9f e0       	ldi	r25, 0x0F	; 15
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	f1 f7       	brne	.-4      	; 0x4a2 <LCD_SEND_CHAR_4BIT_MODE+0x22>
     4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <LCD_SEND_CHAR_4BIT_MODE+0x28>
     4a8:	00 00       	nop
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	8c e0       	ldi	r24, 0x0C	; 12
     4ae:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     4b2:	8c 2f       	mov	r24, r28
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	88 0f       	add	r24, r24
     4b8:	99 1f       	adc	r25, r25
     4ba:	88 0f       	add	r24, r24
     4bc:	99 1f       	adc	r25, r25
     4be:	88 0f       	add	r24, r24
     4c0:	99 1f       	adc	r25, r25
     4c2:	6b b3       	in	r22, 0x1b	; 27
     4c4:	88 77       	andi	r24, 0x78	; 120
     4c6:	67 70       	andi	r22, 0x07	; 7
     4c8:	68 2b       	or	r22, r24
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <PORT_WRITE>
     4d0:	61 e0       	ldi	r22, 0x01	; 1
     4d2:	8c e0       	ldi	r24, 0x0C	; 12
     4d4:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     4d8:	8f e9       	ldi	r24, 0x9F	; 159
     4da:	9f e0       	ldi	r25, 0x0F	; 15
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <LCD_SEND_CHAR_4BIT_MODE+0x5c>
     4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <LCD_SEND_CHAR_4BIT_MODE+0x62>
     4e2:	00 00       	nop
     4e4:	60 e0       	ldi	r22, 0x00	; 0
     4e6:	8c e0       	ldi	r24, 0x0C	; 12
     4e8:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     4ec:	8f e1       	ldi	r24, 0x1F	; 31
     4ee:	9e e4       	ldi	r25, 0x4E	; 78
     4f0:	01 97       	sbiw	r24, 0x01	; 1
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <LCD_SEND_CHAR_4BIT_MODE+0x70>
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <LCD_SEND_CHAR_4BIT_MODE+0x76>
     4f6:	00 00       	nop
     4f8:	cf 91       	pop	r28
     4fa:	08 95       	ret

000004fc <LCD_COMMAND>:
     4fc:	cf 93       	push	r28
     4fe:	c8 2f       	mov	r28, r24
     500:	60 e0       	ldi	r22, 0x00	; 0
     502:	8c e0       	ldi	r24, 0x0C	; 12
     504:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	8b e0       	ldi	r24, 0x0B	; 11
     50c:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     510:	8c 2f       	mov	r24, r28
     512:	0e 94 40 02 	call	0x480	; 0x480 <LCD_SEND_CHAR_4BIT_MODE>
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <LCD_DISPLAY_CHAR>:
     51a:	cf 93       	push	r28
     51c:	c8 2f       	mov	r28, r24
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	8c e0       	ldi	r24, 0x0C	; 12
     522:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     526:	61 e0       	ldi	r22, 0x01	; 1
     528:	8b e0       	ldi	r24, 0x0B	; 11
     52a:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     52e:	8c 2f       	mov	r24, r28
     530:	0e 94 40 02 	call	0x480	; 0x480 <LCD_SEND_CHAR_4BIT_MODE>
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <LCD_CLEAR>:
     538:	81 e0       	ldi	r24, 0x01	; 1
     53a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     53e:	08 95       	ret

00000540 <LCD_INIT_4BIT>:
     540:	61 e0       	ldi	r22, 0x01	; 1
     542:	8d e0       	ldi	r24, 0x0D	; 13
     544:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	8e e0       	ldi	r24, 0x0E	; 14
     54c:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	8f e0       	ldi	r24, 0x0F	; 15
     554:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     558:	61 e0       	ldi	r22, 0x01	; 1
     55a:	80 e1       	ldi	r24, 0x10	; 16
     55c:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     560:	61 e0       	ldi	r22, 0x01	; 1
     562:	8c e0       	ldi	r24, 0x0C	; 12
     564:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     568:	61 e0       	ldi	r22, 0x01	; 1
     56a:	8b e0       	ldi	r24, 0x0B	; 11
     56c:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     570:	61 e0       	ldi	r22, 0x01	; 1
     572:	80 e2       	ldi	r24, 0x20	; 32
     574:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
     578:	2f ef       	ldi	r18, 0xFF	; 255
     57a:	81 ee       	ldi	r24, 0xE1	; 225
     57c:	94 e0       	ldi	r25, 0x04	; 4
     57e:	21 50       	subi	r18, 0x01	; 1
     580:	80 40       	sbci	r24, 0x00	; 0
     582:	90 40       	sbci	r25, 0x00	; 0
     584:	e1 f7       	brne	.-8      	; 0x57e <LCD_INIT_4BIT+0x3e>
     586:	00 c0       	rjmp	.+0      	; 0x588 <LCD_INIT_4BIT+0x48>
     588:	00 00       	nop
     58a:	83 e3       	ldi	r24, 0x33	; 51
     58c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     590:	82 e3       	ldi	r24, 0x32	; 50
     592:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     596:	88 e2       	ldi	r24, 0x28	; 40
     598:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     59c:	8c e0       	ldi	r24, 0x0C	; 12
     59e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     5a2:	0e 94 9c 02 	call	0x538	; 0x538 <LCD_CLEAR>
     5a6:	86 e0       	ldi	r24, 0x06	; 6
     5a8:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     5ac:	82 e0       	ldi	r24, 0x02	; 2
     5ae:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     5b2:	08 95       	ret

000005b4 <LCD_DISPLAY>:
void LCD_DISPLAY(uint8* statment)
{
     5b4:	cf 92       	push	r12
     5b6:	df 92       	push	r13
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	ec 01       	movw	r28, r24
	for(uint32 i=0;statment[i]!= '\0';i++)
     5c2:	c1 2c       	mov	r12, r1
     5c4:	d1 2c       	mov	r13, r1
     5c6:	76 01       	movw	r14, r12
     5c8:	07 c0       	rjmp	.+14     	; 0x5d8 <LCD_DISPLAY+0x24>
	{
		LCD_DISPLAY_CHAR(statment[i]);
     5ca:	0e 94 8d 02 	call	0x51a	; 0x51a <LCD_DISPLAY_CHAR>
	}
	LCD_DISPLAY_CHAR(unit+48);
}
void LCD_DISPLAY(uint8* statment)
{
	for(uint32 i=0;statment[i]!= '\0';i++)
     5ce:	8f ef       	ldi	r24, 0xFF	; 255
     5d0:	c8 1a       	sub	r12, r24
     5d2:	d8 0a       	sbc	r13, r24
     5d4:	e8 0a       	sbc	r14, r24
     5d6:	f8 0a       	sbc	r15, r24
     5d8:	fe 01       	movw	r30, r28
     5da:	ec 0d       	add	r30, r12
     5dc:	fd 1d       	adc	r31, r13
     5de:	80 81       	ld	r24, Z
     5e0:	81 11       	cpse	r24, r1
     5e2:	f3 cf       	rjmp	.-26     	; 0x5ca <LCD_DISPLAY+0x16>
     5e4:	8f e3       	ldi	r24, 0x3F	; 63
     5e6:	9c e9       	ldi	r25, 0x9C	; 156
     5e8:	01 97       	sbiw	r24, 0x01	; 1
     5ea:	f1 f7       	brne	.-4      	; 0x5e8 <LCD_DISPLAY+0x34>
     5ec:	00 c0       	rjmp	.+0      	; 0x5ee <LCD_DISPLAY+0x3a>
     5ee:	00 00       	nop
	{
		LCD_DISPLAY_CHAR(statment[i]);
	}
	_delay_ms(10);
}
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	ff 90       	pop	r15
     5f6:	ef 90       	pop	r14
     5f8:	df 90       	pop	r13
     5fa:	cf 90       	pop	r12
     5fc:	08 95       	ret

000005fe <LCD_GO_TO>:
void LCD_GO_TO (uint8 row,uint8 column)
{
	switch(row)
     5fe:	82 30       	cpi	r24, 0x02	; 2
     600:	29 f4       	brne	.+10     	; 0x60c <LCD_GO_TO+0xe>
	{
		case 2:
		LCD_COMMAND((CURSOR_GO_TO_ORIGIN_SECOND|column));
     602:	86 2f       	mov	r24, r22
     604:	80 6c       	ori	r24, 0xC0	; 192
     606:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
		break;
     60a:	08 95       	ret
		case 1:
		default:
		LCD_COMMAND((CURSOR_GO_TO_ORIGIN_FIRST|column));
     60c:	86 2f       	mov	r24, r22
     60e:	80 68       	ori	r24, 0x80	; 128
     610:	0e 94 7e 02 	call	0x4fc	; 0x4fc <LCD_COMMAND>
     614:	08 95       	ret

00000616 <LCD_floatToString>:
	LCD_COMMAND (CURSOR_INCREMENT);
	LCD_COMMAND (RETURN_HOME);
	
}*/
void LCD_floatToString(float data) // from 500 to "500"
{
     616:	0f 93       	push	r16
     618:	1f 93       	push	r17
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
     622:	60 97       	sbiw	r28, 0x10	; 16
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
	char buff[16]; /* String to hold the ascii result */
	dtostrf(data,6,2,buff); /* 10 for decimal */
     62e:	8e 01       	movw	r16, r28
     630:	0f 5f       	subi	r16, 0xFF	; 255
     632:	1f 4f       	sbci	r17, 0xFF	; 255
     634:	22 e0       	ldi	r18, 0x02	; 2
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	46 e0       	ldi	r20, 0x06	; 6
     63a:	50 e0       	ldi	r21, 0x00	; 0
     63c:	0e 94 4c 0a 	call	0x1498	; 0x1498 <dtostrf>
	LCD_DISPLAY(buff);
     640:	c8 01       	movw	r24, r16
     642:	0e 94 da 02 	call	0x5b4	; 0x5b4 <LCD_DISPLAY>
     646:	60 96       	adiw	r28, 0x10	; 16
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	f8 94       	cli
     64c:	de bf       	out	0x3e, r29	; 62
     64e:	0f be       	out	0x3f, r0	; 63
     650:	cd bf       	out	0x3d, r28	; 61
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	08 95       	ret

0000065c <get_US_distance>:
uint32_t distance;
uint8_t distance_str[10];

uint32 get_US_distance()
{
	return distance;
     65c:	60 91 d2 00 	lds	r22, 0x00D2	; 0x8000d2 <distance>
     660:	70 91 d3 00 	lds	r23, 0x00D3	; 0x8000d3 <distance+0x1>
     664:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <distance+0x2>
     668:	90 91 d5 00 	lds	r25, 0x00D5	; 0x8000d5 <distance+0x3>
}
     66c:	08 95       	ret

0000066e <enable_ex_interrupt>:


void enable_ex_interrupt(void){

ENABLE_INT1(ANY_CHANGE_MODE);
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	0e 94 69 08 	call	0x10d2	; 0x10d2 <ENABLE_INT1>
     674:	08 95       	ret

00000676 <__vector_2>:
	return;
}



ISR(INT1_vect){
     676:	1f 92       	push	r1
     678:	0f 92       	push	r0
     67a:	0f b6       	in	r0, 0x3f	; 63
     67c:	0f 92       	push	r0
     67e:	11 24       	eor	r1, r1
     680:	2f 93       	push	r18
     682:	3f 93       	push	r19
     684:	4f 93       	push	r20
     686:	5f 93       	push	r21
     688:	6f 93       	push	r22
     68a:	7f 93       	push	r23
     68c:	8f 93       	push	r24
     68e:	9f 93       	push	r25
     690:	af 93       	push	r26
     692:	bf 93       	push	r27
     694:	ef 93       	push	r30
     696:	ff 93       	push	r31
	if(sensor_working==1){
     698:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <sensor_working>
     69c:	81 30       	cpi	r24, 0x01	; 1
     69e:	09 f0       	breq	.+2      	; 0x6a2 <__vector_2+0x2c>
     6a0:	4b c0       	rjmp	.+150    	; 0x738 <__vector_2+0xc2>
		if(rising_edge==0){
     6a2:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <rising_edge>
     6a6:	81 11       	cpse	r24, r1
     6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <__vector_2+0x4e>
			TCNT0=0x00;
     6aa:	12 be       	out	0x32, r1	; 50
			rising_edge=1;
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <rising_edge>
			timer_counter=0;
     6b2:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <timer_counter>
     6b6:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <timer_counter+0x1>
     6ba:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <timer_counter+0x2>
     6be:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <timer_counter+0x3>
     6c2:	3a c0       	rjmp	.+116    	; 0x738 <__vector_2+0xc2>
		}
		else{// falling edge
			
			//LCD_CLEAR();
			//LCD_DISPLAY("hello");
			distance=(timer_counter*256+TCNT0)/(932.94);
     6c4:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer_counter>
     6c8:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer_counter+0x1>
     6cc:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer_counter+0x2>
     6d0:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer_counter+0x3>
     6d4:	ba 2f       	mov	r27, r26
     6d6:	a9 2f       	mov	r26, r25
     6d8:	98 2f       	mov	r25, r24
     6da:	88 27       	eor	r24, r24
     6dc:	22 b7       	in	r18, 0x32	; 50
     6de:	bc 01       	movw	r22, r24
     6e0:	cd 01       	movw	r24, r26
     6e2:	62 0f       	add	r22, r18
     6e4:	71 1d       	adc	r23, r1
     6e6:	81 1d       	adc	r24, r1
     6e8:	91 1d       	adc	r25, r1
     6ea:	0e 94 51 09 	call	0x12a2	; 0x12a2 <__floatunsisf>
     6ee:	29 e2       	ldi	r18, 0x29	; 41
     6f0:	3c e3       	ldi	r19, 0x3C	; 60
     6f2:	49 e6       	ldi	r20, 0x69	; 105
     6f4:	54 e4       	ldi	r21, 0x44	; 68
     6f6:	0e 94 b0 08 	call	0x1160	; 0x1160 <__divsf3>
     6fa:	0e 94 22 09 	call	0x1244	; 0x1244 <__fixunssfsi>
     6fe:	60 93 d2 00 	sts	0x00D2, r22	; 0x8000d2 <distance>
     702:	70 93 d3 00 	sts	0x00D3, r23	; 0x8000d3 <distance+0x1>
     706:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <distance+0x2>
     70a:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <distance+0x3>
     70e:	2f ef       	ldi	r18, 0xFF	; 255
     710:	83 ef       	ldi	r24, 0xF3	; 243
     712:	91 e0       	ldi	r25, 0x01	; 1
     714:	21 50       	subi	r18, 0x01	; 1
     716:	80 40       	sbci	r24, 0x00	; 0
     718:	90 40       	sbci	r25, 0x00	; 0
     71a:	e1 f7       	brne	.-8      	; 0x714 <__vector_2+0x9e>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <__vector_2+0xa8>
     71e:	00 00       	nop
			//LCD_DISPLAY(distance_str);
			
			
			
			_delay_ms(40);
			timer_counter=0;
     720:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <timer_counter>
     724:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <timer_counter+0x1>
     728:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <timer_counter+0x2>
     72c:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <timer_counter+0x3>
			rising_edge=0;
     730:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <rising_edge>
			sensor_working=0;
     734:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <sensor_working>
		}
	}}
     738:	ff 91       	pop	r31
     73a:	ef 91       	pop	r30
     73c:	bf 91       	pop	r27
     73e:	af 91       	pop	r26
     740:	9f 91       	pop	r25
     742:	8f 91       	pop	r24
     744:	7f 91       	pop	r23
     746:	6f 91       	pop	r22
     748:	5f 91       	pop	r21
     74a:	4f 91       	pop	r20
     74c:	3f 91       	pop	r19
     74e:	2f 91       	pop	r18
     750:	0f 90       	pop	r0
     752:	0f be       	out	0x3f, r0	; 63
     754:	0f 90       	pop	r0
     756:	1f 90       	pop	r1
     758:	18 95       	reti

0000075a <__vector_11>:
ISR(TIMER0_OVF_vect){
     75a:	1f 92       	push	r1
     75c:	0f 92       	push	r0
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	0f 92       	push	r0
     762:	11 24       	eor	r1, r1
     764:	2f 93       	push	r18
     766:	8f 93       	push	r24
     768:	9f 93       	push	r25
     76a:	af 93       	push	r26
     76c:	bf 93       	push	r27
		timer_counter++;
     76e:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <timer_counter>
     772:	90 91 c9 00 	lds	r25, 0x00C9	; 0x8000c9 <timer_counter+0x1>
     776:	a0 91 ca 00 	lds	r26, 0x00CA	; 0x8000ca <timer_counter+0x2>
     77a:	b0 91 cb 00 	lds	r27, 0x00CB	; 0x8000cb <timer_counter+0x3>
     77e:	01 96       	adiw	r24, 0x01	; 1
     780:	a1 1d       	adc	r26, r1
     782:	b1 1d       	adc	r27, r1
     784:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <timer_counter>
     788:	90 93 c9 00 	sts	0x00C9, r25	; 0x8000c9 <timer_counter+0x1>
     78c:	a0 93 ca 00 	sts	0x00CA, r26	; 0x8000ca <timer_counter+0x2>
     790:	b0 93 cb 00 	sts	0x00CB, r27	; 0x8000cb <timer_counter+0x3>
		if(timer_counter >730){
     794:	8b 3d       	cpi	r24, 0xDB	; 219
     796:	92 40       	sbci	r25, 0x02	; 2
     798:	a1 05       	cpc	r26, r1
     79a:	b1 05       	cpc	r27, r1
     79c:	68 f0       	brcs	.+26     	; 0x7b8 <__vector_11+0x5e>
			TCNT0=0x00;
     79e:	12 be       	out	0x32, r1	; 50
			sensor_working=0;
     7a0:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <sensor_working>
			rising_edge=0;
     7a4:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <rising_edge>
			timer_counter=0;
     7a8:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <timer_counter>
     7ac:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <timer_counter+0x1>
     7b0:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <timer_counter+0x2>
     7b4:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <timer_counter+0x3>
		}
	}
     7b8:	bf 91       	pop	r27
     7ba:	af 91       	pop	r26
     7bc:	9f 91       	pop	r25
     7be:	8f 91       	pop	r24
     7c0:	2f 91       	pop	r18
     7c2:	0f 90       	pop	r0
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	0f 90       	pop	r0
     7c8:	1f 90       	pop	r1
     7ca:	18 95       	reti

000007cc <timer0_init>:
void timer0_init(void)
{
	/* Disable Timer 0 */
	TCCR0 = DISABLE_MODULE_VALUE;
     7cc:	13 be       	out	0x33, r1	; 51
	/* Setting pre scaler */
	TCCR0 = (PRESCLR1_VALUE);
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	83 bf       	out	0x33, r24	; 51
	/* Initializing the timer with zero */
	TCNT0 = ZER0_INITIALIZER;
     7d2:	12 be       	out	0x32, r1	; 50
	/* Timer overflow interrupt enable*/
	TIMSK |=(1<<TOIE0);
     7d4:	89 b7       	in	r24, 0x39	; 57
     7d6:	81 60       	ori	r24, 0x01	; 1
     7d8:	89 bf       	out	0x39, r24	; 57
     7da:	08 95       	ret

000007dc <ULTRASONIC_INIT>:
	return;
}
void ULTRASONIC_INIT()
{
	
	PIN_MODE(TRIGER,OUTPUT);
     7dc:	61 e0       	ldi	r22, 0x01	; 1
     7de:	8c e2       	ldi	r24, 0x2C	; 44
     7e0:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	PIN_MODE(ECHO,INPUT);
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	8b e2       	ldi	r24, 0x2B	; 43
     7e8:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	PIN_PULL_UP(ECHO,ON);
     7ec:	61 e0       	ldi	r22, 0x01	; 1
     7ee:	8b e2       	ldi	r24, 0x2B	; 43
     7f0:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <PIN_PULL_UP>
	enable_ex_interrupt();
     7f4:	0e 94 37 03 	call	0x66e	; 0x66e <enable_ex_interrupt>
	timer0_init();
     7f8:	0e 94 e6 03 	call	0x7cc	; 0x7cc <timer0_init>
     7fc:	08 95       	ret

000007fe <ULTRASONIC_TRIG_PULSE>:
	return;
	}

void ULTRASONIC_TRIG_PULSE()
{
	if(!sensor_working)
     7fe:	80 91 cd 00 	lds	r24, 0x00CD	; 0x8000cd <sensor_working>
     802:	81 11       	cpse	r24, r1
     804:	14 c0       	rjmp	.+40     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
	{
	PIN_WRITE(TRIGER,HIGH);
     806:	61 e0       	ldi	r22, 0x01	; 1
     808:	8c e2       	ldi	r24, 0x2C	; 44
     80a:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
     80e:	2f ef       	ldi	r18, 0xFF	; 255
     810:	86 e7       	ldi	r24, 0x76	; 118
     812:	91 e0       	ldi	r25, 0x01	; 1
     814:	21 50       	subi	r18, 0x01	; 1
     816:	80 40       	sbci	r24, 0x00	; 0
     818:	90 40       	sbci	r25, 0x00	; 0
     81a:	e1 f7       	brne	.-8      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81e:	00 00       	nop
	_delay_ms(30);
	PIN_WRITE(TRIGER,LOW);
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	8c e2       	ldi	r24, 0x2C	; 44
     824:	0e 94 0a 06 	call	0xc14	; 0xc14 <PIN_WRITE>
	sensor_working=1;	
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <sensor_working>
     82e:	08 95       	ret

00000830 <__vector_3>:
	return;
}*/



ISR(INT2_vect){
     830:	1f 92       	push	r1
     832:	0f 92       	push	r0
     834:	0f b6       	in	r0, 0x3f	; 63
     836:	0f 92       	push	r0
     838:	11 24       	eor	r1, r1
     83a:	2f 93       	push	r18
     83c:	3f 93       	push	r19
     83e:	4f 93       	push	r20
     840:	5f 93       	push	r21
     842:	6f 93       	push	r22
     844:	7f 93       	push	r23
     846:	8f 93       	push	r24
     848:	9f 93       	push	r25
     84a:	af 93       	push	r26
     84c:	bf 93       	push	r27
     84e:	ef 93       	push	r30
     850:	ff 93       	push	r31
	if(water_rising_edge==1){
     852:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     856:	81 30       	cpi	r24, 0x01	; 1
     858:	61 f4       	brne	.+24     	; 0x872 <__stack+0x13>
		
			TCNT2=0x00;
     85a:	14 bc       	out	0x24, r1	; 36
			water_rising_edge=0;
     85c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
			water_timer_counter=0;
     860:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <water_timer_counter>
     864:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <water_timer_counter+0x1>
     868:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <water_timer_counter+0x2>
     86c:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <water_timer_counter+0x3>
     870:	57 c0       	rjmp	.+174    	; 0x920 <__stack+0xc1>
		
	
	
			//LCD_CLEAR();
			//LCD_DISPLAY("hello");
			time=(water_timer_counter*256+TCNT2);
     872:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <water_timer_counter>
     876:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <water_timer_counter+0x1>
     87a:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <water_timer_counter+0x2>
     87e:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <water_timer_counter+0x3>
     882:	ba 2f       	mov	r27, r26
     884:	a9 2f       	mov	r26, r25
     886:	98 2f       	mov	r25, r24
     888:	88 27       	eor	r24, r24
     88a:	24 b5       	in	r18, 0x24	; 36
     88c:	bc 01       	movw	r22, r24
     88e:	cd 01       	movw	r24, r26
     890:	62 0f       	add	r22, r18
     892:	71 1d       	adc	r23, r1
     894:	81 1d       	adc	r24, r1
     896:	91 1d       	adc	r25, r1
     898:	60 93 e0 00 	sts	0x00E0, r22	; 0x8000e0 <time>
     89c:	70 93 e1 00 	sts	0x00E1, r23	; 0x8000e1 <time+0x1>
     8a0:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <time+0x2>
     8a4:	90 93 e3 00 	sts	0x00E3, r25	; 0x8000e3 <time+0x3>
			Water_flow= 16000000/(time*5.5);
     8a8:	0e 94 51 09 	call	0x12a2	; 0x12a2 <__floatunsisf>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	40 eb       	ldi	r20, 0xB0	; 176
     8b2:	50 e4       	ldi	r21, 0x40	; 64
     8b4:	0e 94 df 09 	call	0x13be	; 0x13be <__mulsf3>
     8b8:	9b 01       	movw	r18, r22
     8ba:	ac 01       	movw	r20, r24
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	74 e2       	ldi	r23, 0x24	; 36
     8c0:	84 e7       	ldi	r24, 0x74	; 116
     8c2:	9b e4       	ldi	r25, 0x4B	; 75
     8c4:	0e 94 b0 08 	call	0x1160	; 0x1160 <__divsf3>
     8c8:	60 93 e4 00 	sts	0x00E4, r22	; 0x8000e4 <Water_flow>
     8cc:	70 93 e5 00 	sts	0x00E5, r23	; 0x8000e5 <Water_flow+0x1>
     8d0:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <Water_flow+0x2>
     8d4:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <Water_flow+0x3>
			
			
			LCD_GO_TO(2,0);
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	82 e0       	ldi	r24, 0x02	; 2
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 ff 02 	call	0x5fe	; 0x5fe <LCD_GO_TO>
			//itoa(distance,distance_str,10);
			//strcat(distance_str, " cm ");
			LCD_floatToString(Water_flow);
     8e4:	60 91 e4 00 	lds	r22, 0x00E4	; 0x8000e4 <Water_flow>
     8e8:	70 91 e5 00 	lds	r23, 0x00E5	; 0x8000e5 <Water_flow+0x1>
     8ec:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <Water_flow+0x2>
     8f0:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <Water_flow+0x3>
     8f4:	0e 94 0b 03 	call	0x616	; 0x616 <LCD_floatToString>
     8f8:	2f ef       	ldi	r18, 0xFF	; 255
     8fa:	83 ef       	ldi	r24, 0xF3	; 243
     8fc:	91 e0       	ldi	r25, 0x01	; 1
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	80 40       	sbci	r24, 0x00	; 0
     902:	90 40       	sbci	r25, 0x00	; 0
     904:	e1 f7       	brne	.-8      	; 0x8fe <__stack+0x9f>
     906:	00 c0       	rjmp	.+0      	; 0x908 <__stack+0xa9>
     908:	00 00       	nop
			//LCD_DISPLAY("cm");
			
			
			_delay_ms(40);
			water_timer_counter=0;
     90a:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <water_timer_counter>
     90e:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <water_timer_counter+0x1>
     912:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <water_timer_counter+0x2>
     916:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <water_timer_counter+0x3>
			water_rising_edge=1;
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			
		}
	}
     920:	ff 91       	pop	r31
     922:	ef 91       	pop	r30
     924:	bf 91       	pop	r27
     926:	af 91       	pop	r26
     928:	9f 91       	pop	r25
     92a:	8f 91       	pop	r24
     92c:	7f 91       	pop	r23
     92e:	6f 91       	pop	r22
     930:	5f 91       	pop	r21
     932:	4f 91       	pop	r20
     934:	3f 91       	pop	r19
     936:	2f 91       	pop	r18
     938:	0f 90       	pop	r0
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	0f 90       	pop	r0
     93e:	1f 90       	pop	r1
     940:	18 95       	reti

00000942 <__vector_5>:
	ISR(TIMER2_OVF_vect){
     942:	1f 92       	push	r1
     944:	0f 92       	push	r0
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	0f 92       	push	r0
     94a:	11 24       	eor	r1, r1
     94c:	2f 93       	push	r18
     94e:	8f 93       	push	r24
     950:	9f 93       	push	r25
     952:	af 93       	push	r26
     954:	bf 93       	push	r27
	
			water_timer_counter++;
     956:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <water_timer_counter>
     95a:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <water_timer_counter+0x1>
     95e:	a0 91 d0 00 	lds	r26, 0x00D0	; 0x8000d0 <water_timer_counter+0x2>
     962:	b0 91 d1 00 	lds	r27, 0x00D1	; 0x8000d1 <water_timer_counter+0x3>
     966:	01 96       	adiw	r24, 0x01	; 1
     968:	a1 1d       	adc	r26, r1
     96a:	b1 1d       	adc	r27, r1
     96c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <water_timer_counter>
     970:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <water_timer_counter+0x1>
     974:	a0 93 d0 00 	sts	0x00D0, r26	; 0x8000d0 <water_timer_counter+0x2>
     978:	b0 93 d1 00 	sts	0x00D1, r27	; 0x8000d1 <water_timer_counter+0x3>
			if(water_timer_counter >300){
     97c:	8d 32       	cpi	r24, 0x2D	; 45
     97e:	91 40       	sbci	r25, 0x01	; 1
     980:	a1 05       	cpc	r26, r1
     982:	b1 05       	cpc	r27, r1
     984:	60 f0       	brcs	.+24     	; 0x99e <__vector_5+0x5c>
				TCNT2=0x00;
     986:	14 bc       	out	0x24, r1	; 36
				
				water_rising_edge=1;
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				water_timer_counter=0;
     98e:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <water_timer_counter>
     992:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <water_timer_counter+0x1>
     996:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <water_timer_counter+0x2>
     99a:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <water_timer_counter+0x3>
			}
			
		
	}
     99e:	bf 91       	pop	r27
     9a0:	af 91       	pop	r26
     9a2:	9f 91       	pop	r25
     9a4:	8f 91       	pop	r24
     9a6:	2f 91       	pop	r18
     9a8:	0f 90       	pop	r0
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	0f 90       	pop	r0
     9ae:	1f 90       	pop	r1
     9b0:	18 95       	reti

000009b2 <timer2_init>:
	void timer2_init(void)
	{
		
		TCCR2 = DISABLE_MODULE_VALUE; // Disable Timer 2
     9b2:	15 bc       	out	0x25, r1	; 37
		
		TCCR2 = (PRESCLR1_VALUE);     // Setting Pre scaler
     9b4:	81 e0       	ldi	r24, 0x01	; 1
     9b6:	85 bd       	out	0x25, r24	; 37
		
		TCNT2 = ZER0_INITIALIZER;     // Initializing the timer with zero
     9b8:	14 bc       	out	0x24, r1	; 36
		
		TIMSK |=(1<<TOIE2);           //Timer overflow interrupt enable
     9ba:	89 b7       	in	r24, 0x39	; 57
     9bc:	80 64       	ori	r24, 0x40	; 64
     9be:	89 bf       	out	0x39, r24	; 57
     9c0:	08 95       	ret

000009c2 <WATER_INIT>:

		return;
	}
	void WATER_INIT()
	{
		ENABLE_INT2(RISING_EDGE_MODE);  
     9c2:	83 e0       	ldi	r24, 0x03	; 3
     9c4:	0e 94 7b 08 	call	0x10f6	; 0x10f6 <ENABLE_INT2>
		PIN_MODE(ECHO,INPUT);
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	86 e1       	ldi	r24, 0x16	; 22
     9cc:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
		//PIN_PULL_UP(ECHO,ON);
		//enable_ex_interrupt();
		timer2_init();
     9d0:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <timer2_init>
     9d4:	08 95       	ret

000009d6 <ADC_INIT>:
#include "BIT_MATH.h"
#include "ATmega32_Register.h"
#include "ADC.h"
void ADC_INIT(void)
{
	CLR_BIT(DDRA_REG,0);
     9d6:	8a b3       	in	r24, 0x1a	; 26
     9d8:	8e 7f       	andi	r24, 0xFE	; 254
     9da:	8a bb       	out	0x1a, r24	; 26
	/* to select AVCC in VREF (5V) */
	SET_BIT(ADMUX,6);
     9dc:	87 b1       	in	r24, 0x07	; 7
     9de:	80 64       	ori	r24, 0x40	; 64
     9e0:	87 b9       	out	0x07, r24	; 7
	CLR_BIT(ADMUX,7);
     9e2:	87 b1       	in	r24, 0x07	; 7
     9e4:	8f 77       	andi	r24, 0x7F	; 127
     9e6:	87 b9       	out	0x07, r24	; 7
	
	/* to select channel 0 */
	CLR_BIT(ADMUX,0);
     9e8:	87 b1       	in	r24, 0x07	; 7
     9ea:	8e 7f       	andi	r24, 0xFE	; 254
     9ec:	87 b9       	out	0x07, r24	; 7
	CLR_BIT(ADMUX,1);
     9ee:	87 b1       	in	r24, 0x07	; 7
     9f0:	8d 7f       	andi	r24, 0xFD	; 253
     9f2:	87 b9       	out	0x07, r24	; 7
	CLR_BIT(ADMUX,2);
     9f4:	87 b1       	in	r24, 0x07	; 7
     9f6:	8b 7f       	andi	r24, 0xFB	; 251
     9f8:	87 b9       	out	0x07, r24	; 7
	CLR_BIT(ADMUX,3);
     9fa:	87 b1       	in	r24, 0x07	; 7
     9fc:	87 7f       	andi	r24, 0xF7	; 247
     9fe:	87 b9       	out	0x07, r24	; 7
	CLR_BIT(ADMUX,4);
     a00:	87 b1       	in	r24, 0x07	; 7
     a02:	8f 7e       	andi	r24, 0xEF	; 239
     a04:	87 b9       	out	0x07, r24	; 7
	
	/* PRESCALER 1/128 */
	SET_BIT(ADCSRA,0);
     a06:	86 b1       	in	r24, 0x06	; 6
     a08:	81 60       	ori	r24, 0x01	; 1
     a0a:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA,1);
     a0c:	86 b1       	in	r24, 0x06	; 6
     a0e:	82 60       	ori	r24, 0x02	; 2
     a10:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA,2);
     a12:	86 b1       	in	r24, 0x06	; 6
     a14:	84 60       	ori	r24, 0x04	; 4
     a16:	86 b9       	out	0x06, r24	; 6
	
	/* ADC CONTROL */
	SET_BIT(ADCSRA,7); // ADC ENABLE
     a18:	86 b1       	in	r24, 0x06	; 6
     a1a:	80 68       	ori	r24, 0x80	; 128
     a1c:	86 b9       	out	0x06, r24	; 6
	SET_BIT(ADCSRA,5);  // AUTO TRIGGER
     a1e:	86 b1       	in	r24, 0x06	; 6
     a20:	80 62       	ori	r24, 0x20	; 32
     a22:	86 b9       	out	0x06, r24	; 6
     a24:	08 95       	ret

00000a26 <ADC_READ>:
	
}

uint16 ADC_READ(void)
{
	SET_BIT(ADCSRA,6);  // START CONVERSION
     a26:	86 b1       	in	r24, 0x06	; 6
     a28:	80 64       	ori	r24, 0x40	; 64
     a2a:	86 b9       	out	0x06, r24	; 6
	while(BIT_IS_CLEAR(ADCSRA,4))
     a2c:	34 9b       	sbis	0x06, 4	; 6
     a2e:	fe cf       	rjmp	.-4      	; 0xa2c <ADC_READ+0x6>
	{
		
	}
	return ADC_VALUE;
     a30:	84 b1       	in	r24, 0x04	; 4
     a32:	95 b1       	in	r25, 0x05	; 5

     a34:	08 95       	ret

00000a36 <PIN_MODE>:
		case C:                               // case of using port C
		MODE_C = mode;                        // make all pins in port C = 1 --> OUTPUT or 0 --> INPUT
		break;                                // breaks case C
		
		case D:                               // case of using port D
		MODE_D = mode;                        // make all pins in port D = 1 --> OUTPUT or 0 --> INPUT
     a36:	9d ec       	ldi	r25, 0xCD	; 205
     a38:	89 9f       	mul	r24, r25
     a3a:	91 2d       	mov	r25, r1
     a3c:	11 24       	eor	r1, r1
     a3e:	96 95       	lsr	r25
     a40:	96 95       	lsr	r25
     a42:	96 95       	lsr	r25
     a44:	66 23       	and	r22, r22
     a46:	09 f4       	brne	.+2      	; 0xa4a <PIN_MODE+0x14>
     a48:	72 c0       	rjmp	.+228    	; 0xb2e <PIN_MODE+0xf8>
     a4a:	61 30       	cpi	r22, 0x01	; 1
     a4c:	09 f0       	breq	.+2      	; 0xa50 <PIN_MODE+0x1a>
     a4e:	e1 c0       	rjmp	.+450    	; 0xc12 <PIN_MODE+0x1dc>
     a50:	92 30       	cpi	r25, 0x02	; 2
     a52:	21 f1       	breq	.+72     	; 0xa9c <PIN_MODE+0x66>
     a54:	18 f4       	brcc	.+6      	; 0xa5c <PIN_MODE+0x26>
     a56:	91 30       	cpi	r25, 0x01	; 1
     a58:	39 f0       	breq	.+14     	; 0xa68 <PIN_MODE+0x32>
     a5a:	08 95       	ret
     a5c:	93 30       	cpi	r25, 0x03	; 3
     a5e:	c1 f1       	breq	.+112    	; 0xad0 <PIN_MODE+0x9a>
     a60:	94 30       	cpi	r25, 0x04	; 4
     a62:	09 f4       	brne	.+2      	; 0xa66 <PIN_MODE+0x30>
     a64:	4c c0       	rjmp	.+152    	; 0xafe <PIN_MODE+0xc8>
     a66:	08 95       	ret
     a68:	9d ec       	ldi	r25, 0xCD	; 205
     a6a:	89 9f       	mul	r24, r25
     a6c:	91 2d       	mov	r25, r1
     a6e:	11 24       	eor	r1, r1
     a70:	96 95       	lsr	r25
     a72:	96 95       	lsr	r25
     a74:	96 95       	lsr	r25
     a76:	99 0f       	add	r25, r25
     a78:	29 2f       	mov	r18, r25
     a7a:	22 0f       	add	r18, r18
     a7c:	22 0f       	add	r18, r18
     a7e:	92 0f       	add	r25, r18
     a80:	89 1b       	sub	r24, r25
     a82:	4a b3       	in	r20, 0x1a	; 26
     a84:	21 e0       	ldi	r18, 0x01	; 1
     a86:	30 e0       	ldi	r19, 0x00	; 0
     a88:	b9 01       	movw	r22, r18
     a8a:	02 c0       	rjmp	.+4      	; 0xa90 <PIN_MODE+0x5a>
     a8c:	66 0f       	add	r22, r22
     a8e:	77 1f       	adc	r23, r23
     a90:	8a 95       	dec	r24
     a92:	e2 f7       	brpl	.-8      	; 0xa8c <PIN_MODE+0x56>
     a94:	cb 01       	movw	r24, r22
     a96:	84 2b       	or	r24, r20
     a98:	8a bb       	out	0x1a, r24	; 26
     a9a:	08 95       	ret
     a9c:	9d ec       	ldi	r25, 0xCD	; 205
     a9e:	89 9f       	mul	r24, r25
     aa0:	91 2d       	mov	r25, r1
     aa2:	11 24       	eor	r1, r1
     aa4:	92 95       	swap	r25
     aa6:	9f 70       	andi	r25, 0x0F	; 15
     aa8:	99 0f       	add	r25, r25
     aaa:	99 0f       	add	r25, r25
     aac:	29 2f       	mov	r18, r25
     aae:	22 0f       	add	r18, r18
     ab0:	22 0f       	add	r18, r18
     ab2:	92 0f       	add	r25, r18
     ab4:	89 1b       	sub	r24, r25
     ab6:	47 b3       	in	r20, 0x17	; 23
     ab8:	21 e0       	ldi	r18, 0x01	; 1
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	b9 01       	movw	r22, r18
     abe:	02 c0       	rjmp	.+4      	; 0xac4 <PIN_MODE+0x8e>
     ac0:	66 0f       	add	r22, r22
     ac2:	77 1f       	adc	r23, r23
     ac4:	8a 95       	dec	r24
     ac6:	e2 f7       	brpl	.-8      	; 0xac0 <PIN_MODE+0x8a>
     ac8:	cb 01       	movw	r24, r22
     aca:	84 2b       	or	r24, r20
     acc:	87 bb       	out	0x17, r24	; 23
     ace:	08 95       	ret
     ad0:	99 e8       	ldi	r25, 0x89	; 137
     ad2:	89 9f       	mul	r24, r25
     ad4:	91 2d       	mov	r25, r1
     ad6:	11 24       	eor	r1, r1
     ad8:	92 95       	swap	r25
     ada:	9f 70       	andi	r25, 0x0F	; 15
     adc:	7e e1       	ldi	r23, 0x1E	; 30
     ade:	97 9f       	mul	r25, r23
     ae0:	80 19       	sub	r24, r0
     ae2:	11 24       	eor	r1, r1
     ae4:	44 b3       	in	r20, 0x14	; 20
     ae6:	21 e0       	ldi	r18, 0x01	; 1
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	b9 01       	movw	r22, r18
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <PIN_MODE+0xbc>
     aee:	66 0f       	add	r22, r22
     af0:	77 1f       	adc	r23, r23
     af2:	8a 95       	dec	r24
     af4:	e2 f7       	brpl	.-8      	; 0xaee <PIN_MODE+0xb8>
     af6:	cb 01       	movw	r24, r22
     af8:	84 2b       	or	r24, r20
     afa:	84 bb       	out	0x14, r24	; 20
     afc:	08 95       	ret
     afe:	9d ec       	ldi	r25, 0xCD	; 205
     b00:	89 9f       	mul	r24, r25
     b02:	91 2d       	mov	r25, r1
     b04:	11 24       	eor	r1, r1
     b06:	92 95       	swap	r25
     b08:	96 95       	lsr	r25
     b0a:	97 70       	andi	r25, 0x07	; 7
     b0c:	78 e2       	ldi	r23, 0x28	; 40
     b0e:	97 9f       	mul	r25, r23
     b10:	80 19       	sub	r24, r0
     b12:	11 24       	eor	r1, r1
     b14:	41 b3       	in	r20, 0x11	; 17
     b16:	21 e0       	ldi	r18, 0x01	; 1
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	b9 01       	movw	r22, r18
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <PIN_MODE+0xec>
     b1e:	66 0f       	add	r22, r22
     b20:	77 1f       	adc	r23, r23
     b22:	8a 95       	dec	r24
     b24:	e2 f7       	brpl	.-8      	; 0xb1e <PIN_MODE+0xe8>
     b26:	cb 01       	movw	r24, r22
     b28:	84 2b       	or	r24, r20
     b2a:	81 bb       	out	0x11, r24	; 17
     b2c:	08 95       	ret
     b2e:	92 30       	cpi	r25, 0x02	; 2
     b30:	29 f1       	breq	.+74     	; 0xb7c <PIN_MODE+0x146>
     b32:	18 f4       	brcc	.+6      	; 0xb3a <PIN_MODE+0x104>
     b34:	91 30       	cpi	r25, 0x01	; 1
     b36:	39 f0       	breq	.+14     	; 0xb46 <PIN_MODE+0x110>
     b38:	08 95       	ret
     b3a:	93 30       	cpi	r25, 0x03	; 3
     b3c:	d1 f1       	breq	.+116    	; 0xbb2 <PIN_MODE+0x17c>
     b3e:	94 30       	cpi	r25, 0x04	; 4
     b40:	09 f4       	brne	.+2      	; 0xb44 <PIN_MODE+0x10e>
     b42:	4f c0       	rjmp	.+158    	; 0xbe2 <PIN_MODE+0x1ac>
     b44:	08 95       	ret
     b46:	9d ec       	ldi	r25, 0xCD	; 205
     b48:	89 9f       	mul	r24, r25
     b4a:	91 2d       	mov	r25, r1
     b4c:	11 24       	eor	r1, r1
     b4e:	96 95       	lsr	r25
     b50:	96 95       	lsr	r25
     b52:	96 95       	lsr	r25
     b54:	99 0f       	add	r25, r25
     b56:	29 2f       	mov	r18, r25
     b58:	22 0f       	add	r18, r18
     b5a:	22 0f       	add	r18, r18
     b5c:	92 0f       	add	r25, r18
     b5e:	89 1b       	sub	r24, r25
     b60:	4a b3       	in	r20, 0x1a	; 26
     b62:	21 e0       	ldi	r18, 0x01	; 1
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	b9 01       	movw	r22, r18
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <PIN_MODE+0x138>
     b6a:	66 0f       	add	r22, r22
     b6c:	77 1f       	adc	r23, r23
     b6e:	8a 95       	dec	r24
     b70:	e2 f7       	brpl	.-8      	; 0xb6a <PIN_MODE+0x134>
     b72:	cb 01       	movw	r24, r22
     b74:	80 95       	com	r24
     b76:	84 23       	and	r24, r20
     b78:	8a bb       	out	0x1a, r24	; 26
     b7a:	08 95       	ret
     b7c:	9d ec       	ldi	r25, 0xCD	; 205
     b7e:	89 9f       	mul	r24, r25
     b80:	91 2d       	mov	r25, r1
     b82:	11 24       	eor	r1, r1
     b84:	92 95       	swap	r25
     b86:	9f 70       	andi	r25, 0x0F	; 15
     b88:	99 0f       	add	r25, r25
     b8a:	99 0f       	add	r25, r25
     b8c:	29 2f       	mov	r18, r25
     b8e:	22 0f       	add	r18, r18
     b90:	22 0f       	add	r18, r18
     b92:	92 0f       	add	r25, r18
     b94:	89 1b       	sub	r24, r25
     b96:	47 b3       	in	r20, 0x17	; 23
     b98:	21 e0       	ldi	r18, 0x01	; 1
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	b9 01       	movw	r22, r18
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <PIN_MODE+0x16e>
     ba0:	66 0f       	add	r22, r22
     ba2:	77 1f       	adc	r23, r23
     ba4:	8a 95       	dec	r24
     ba6:	e2 f7       	brpl	.-8      	; 0xba0 <PIN_MODE+0x16a>
     ba8:	cb 01       	movw	r24, r22
     baa:	80 95       	com	r24
     bac:	84 23       	and	r24, r20
     bae:	87 bb       	out	0x17, r24	; 23
     bb0:	08 95       	ret
     bb2:	99 e8       	ldi	r25, 0x89	; 137
     bb4:	89 9f       	mul	r24, r25
     bb6:	91 2d       	mov	r25, r1
     bb8:	11 24       	eor	r1, r1
     bba:	92 95       	swap	r25
     bbc:	9f 70       	andi	r25, 0x0F	; 15
     bbe:	7e e1       	ldi	r23, 0x1E	; 30
     bc0:	97 9f       	mul	r25, r23
     bc2:	80 19       	sub	r24, r0
     bc4:	11 24       	eor	r1, r1
     bc6:	44 b3       	in	r20, 0x14	; 20
     bc8:	21 e0       	ldi	r18, 0x01	; 1
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	b9 01       	movw	r22, r18
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <PIN_MODE+0x19e>
     bd0:	66 0f       	add	r22, r22
     bd2:	77 1f       	adc	r23, r23
     bd4:	8a 95       	dec	r24
     bd6:	e2 f7       	brpl	.-8      	; 0xbd0 <PIN_MODE+0x19a>
     bd8:	cb 01       	movw	r24, r22
     bda:	80 95       	com	r24
     bdc:	84 23       	and	r24, r20
     bde:	84 bb       	out	0x14, r24	; 20
     be0:	08 95       	ret
     be2:	9d ec       	ldi	r25, 0xCD	; 205
     be4:	89 9f       	mul	r24, r25
     be6:	91 2d       	mov	r25, r1
     be8:	11 24       	eor	r1, r1
     bea:	92 95       	swap	r25
     bec:	96 95       	lsr	r25
     bee:	97 70       	andi	r25, 0x07	; 7
     bf0:	78 e2       	ldi	r23, 0x28	; 40
     bf2:	97 9f       	mul	r25, r23
     bf4:	80 19       	sub	r24, r0
     bf6:	11 24       	eor	r1, r1
     bf8:	41 b3       	in	r20, 0x11	; 17
     bfa:	21 e0       	ldi	r18, 0x01	; 1
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	b9 01       	movw	r22, r18
     c00:	02 c0       	rjmp	.+4      	; 0xc06 <PIN_MODE+0x1d0>
     c02:	66 0f       	add	r22, r22
     c04:	77 1f       	adc	r23, r23
     c06:	8a 95       	dec	r24
     c08:	e2 f7       	brpl	.-8      	; 0xc02 <PIN_MODE+0x1cc>
     c0a:	cb 01       	movw	r24, r22
     c0c:	80 95       	com	r24
     c0e:	84 23       	and	r24, r20
     c10:	81 bb       	out	0x11, r24	; 17
     c12:	08 95       	ret

00000c14 <PIN_WRITE>:
     c14:	9d ec       	ldi	r25, 0xCD	; 205
     c16:	89 9f       	mul	r24, r25
     c18:	91 2d       	mov	r25, r1
     c1a:	11 24       	eor	r1, r1
     c1c:	96 95       	lsr	r25
     c1e:	96 95       	lsr	r25
     c20:	96 95       	lsr	r25
     c22:	66 23       	and	r22, r22
     c24:	09 f4       	brne	.+2      	; 0xc28 <PIN_WRITE+0x14>
     c26:	72 c0       	rjmp	.+228    	; 0xd0c <PIN_WRITE+0xf8>
     c28:	61 30       	cpi	r22, 0x01	; 1
     c2a:	09 f0       	breq	.+2      	; 0xc2e <PIN_WRITE+0x1a>
     c2c:	e1 c0       	rjmp	.+450    	; 0xdf0 <PIN_WRITE+0x1dc>
     c2e:	92 30       	cpi	r25, 0x02	; 2
     c30:	21 f1       	breq	.+72     	; 0xc7a <PIN_WRITE+0x66>
     c32:	18 f4       	brcc	.+6      	; 0xc3a <PIN_WRITE+0x26>
     c34:	91 30       	cpi	r25, 0x01	; 1
     c36:	39 f0       	breq	.+14     	; 0xc46 <PIN_WRITE+0x32>
     c38:	08 95       	ret
     c3a:	93 30       	cpi	r25, 0x03	; 3
     c3c:	c1 f1       	breq	.+112    	; 0xcae <PIN_WRITE+0x9a>
     c3e:	94 30       	cpi	r25, 0x04	; 4
     c40:	09 f4       	brne	.+2      	; 0xc44 <PIN_WRITE+0x30>
     c42:	4c c0       	rjmp	.+152    	; 0xcdc <PIN_WRITE+0xc8>
     c44:	08 95       	ret
     c46:	9d ec       	ldi	r25, 0xCD	; 205
     c48:	89 9f       	mul	r24, r25
     c4a:	91 2d       	mov	r25, r1
     c4c:	11 24       	eor	r1, r1
     c4e:	96 95       	lsr	r25
     c50:	96 95       	lsr	r25
     c52:	96 95       	lsr	r25
     c54:	99 0f       	add	r25, r25
     c56:	29 2f       	mov	r18, r25
     c58:	22 0f       	add	r18, r18
     c5a:	22 0f       	add	r18, r18
     c5c:	92 0f       	add	r25, r18
     c5e:	89 1b       	sub	r24, r25
     c60:	4b b3       	in	r20, 0x1b	; 27
     c62:	21 e0       	ldi	r18, 0x01	; 1
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	b9 01       	movw	r22, r18
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <PIN_WRITE+0x5a>
     c6a:	66 0f       	add	r22, r22
     c6c:	77 1f       	adc	r23, r23
     c6e:	8a 95       	dec	r24
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <PIN_WRITE+0x56>
     c72:	cb 01       	movw	r24, r22
     c74:	84 2b       	or	r24, r20
     c76:	8b bb       	out	0x1b, r24	; 27
     c78:	08 95       	ret
     c7a:	9d ec       	ldi	r25, 0xCD	; 205
     c7c:	89 9f       	mul	r24, r25
     c7e:	91 2d       	mov	r25, r1
     c80:	11 24       	eor	r1, r1
     c82:	92 95       	swap	r25
     c84:	9f 70       	andi	r25, 0x0F	; 15
     c86:	99 0f       	add	r25, r25
     c88:	99 0f       	add	r25, r25
     c8a:	29 2f       	mov	r18, r25
     c8c:	22 0f       	add	r18, r18
     c8e:	22 0f       	add	r18, r18
     c90:	92 0f       	add	r25, r18
     c92:	89 1b       	sub	r24, r25
     c94:	48 b3       	in	r20, 0x18	; 24
     c96:	21 e0       	ldi	r18, 0x01	; 1
     c98:	30 e0       	ldi	r19, 0x00	; 0
     c9a:	b9 01       	movw	r22, r18
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <PIN_WRITE+0x8e>
     c9e:	66 0f       	add	r22, r22
     ca0:	77 1f       	adc	r23, r23
     ca2:	8a 95       	dec	r24
     ca4:	e2 f7       	brpl	.-8      	; 0xc9e <PIN_WRITE+0x8a>
     ca6:	cb 01       	movw	r24, r22
     ca8:	84 2b       	or	r24, r20
     caa:	88 bb       	out	0x18, r24	; 24
     cac:	08 95       	ret
     cae:	99 e8       	ldi	r25, 0x89	; 137
     cb0:	89 9f       	mul	r24, r25
     cb2:	91 2d       	mov	r25, r1
     cb4:	11 24       	eor	r1, r1
     cb6:	92 95       	swap	r25
     cb8:	9f 70       	andi	r25, 0x0F	; 15
     cba:	7e e1       	ldi	r23, 0x1E	; 30
     cbc:	97 9f       	mul	r25, r23
     cbe:	80 19       	sub	r24, r0
     cc0:	11 24       	eor	r1, r1
     cc2:	45 b3       	in	r20, 0x15	; 21
     cc4:	21 e0       	ldi	r18, 0x01	; 1
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	b9 01       	movw	r22, r18
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <PIN_WRITE+0xbc>
     ccc:	66 0f       	add	r22, r22
     cce:	77 1f       	adc	r23, r23
     cd0:	8a 95       	dec	r24
     cd2:	e2 f7       	brpl	.-8      	; 0xccc <PIN_WRITE+0xb8>
     cd4:	cb 01       	movw	r24, r22
     cd6:	84 2b       	or	r24, r20
     cd8:	85 bb       	out	0x15, r24	; 21
     cda:	08 95       	ret
     cdc:	9d ec       	ldi	r25, 0xCD	; 205
     cde:	89 9f       	mul	r24, r25
     ce0:	91 2d       	mov	r25, r1
     ce2:	11 24       	eor	r1, r1
     ce4:	92 95       	swap	r25
     ce6:	96 95       	lsr	r25
     ce8:	97 70       	andi	r25, 0x07	; 7
     cea:	78 e2       	ldi	r23, 0x28	; 40
     cec:	97 9f       	mul	r25, r23
     cee:	80 19       	sub	r24, r0
     cf0:	11 24       	eor	r1, r1
     cf2:	42 b3       	in	r20, 0x12	; 18
     cf4:	21 e0       	ldi	r18, 0x01	; 1
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	b9 01       	movw	r22, r18
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <PIN_WRITE+0xec>
     cfc:	66 0f       	add	r22, r22
     cfe:	77 1f       	adc	r23, r23
     d00:	8a 95       	dec	r24
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <PIN_WRITE+0xe8>
     d04:	cb 01       	movw	r24, r22
     d06:	84 2b       	or	r24, r20
     d08:	82 bb       	out	0x12, r24	; 18
     d0a:	08 95       	ret
     d0c:	92 30       	cpi	r25, 0x02	; 2
     d0e:	29 f1       	breq	.+74     	; 0xd5a <PIN_WRITE+0x146>
     d10:	18 f4       	brcc	.+6      	; 0xd18 <PIN_WRITE+0x104>
     d12:	91 30       	cpi	r25, 0x01	; 1
     d14:	39 f0       	breq	.+14     	; 0xd24 <PIN_WRITE+0x110>
     d16:	08 95       	ret
     d18:	93 30       	cpi	r25, 0x03	; 3
     d1a:	d1 f1       	breq	.+116    	; 0xd90 <PIN_WRITE+0x17c>
     d1c:	94 30       	cpi	r25, 0x04	; 4
     d1e:	09 f4       	brne	.+2      	; 0xd22 <PIN_WRITE+0x10e>
     d20:	4f c0       	rjmp	.+158    	; 0xdc0 <PIN_WRITE+0x1ac>
     d22:	08 95       	ret
     d24:	9d ec       	ldi	r25, 0xCD	; 205
     d26:	89 9f       	mul	r24, r25
     d28:	91 2d       	mov	r25, r1
     d2a:	11 24       	eor	r1, r1
     d2c:	96 95       	lsr	r25
     d2e:	96 95       	lsr	r25
     d30:	96 95       	lsr	r25
     d32:	99 0f       	add	r25, r25
     d34:	29 2f       	mov	r18, r25
     d36:	22 0f       	add	r18, r18
     d38:	22 0f       	add	r18, r18
     d3a:	92 0f       	add	r25, r18
     d3c:	89 1b       	sub	r24, r25
     d3e:	4b b3       	in	r20, 0x1b	; 27
     d40:	21 e0       	ldi	r18, 0x01	; 1
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	b9 01       	movw	r22, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <PIN_WRITE+0x138>
     d48:	66 0f       	add	r22, r22
     d4a:	77 1f       	adc	r23, r23
     d4c:	8a 95       	dec	r24
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <PIN_WRITE+0x134>
     d50:	cb 01       	movw	r24, r22
     d52:	80 95       	com	r24
     d54:	84 23       	and	r24, r20
     d56:	8b bb       	out	0x1b, r24	; 27
     d58:	08 95       	ret
     d5a:	9d ec       	ldi	r25, 0xCD	; 205
     d5c:	89 9f       	mul	r24, r25
     d5e:	91 2d       	mov	r25, r1
     d60:	11 24       	eor	r1, r1
     d62:	92 95       	swap	r25
     d64:	9f 70       	andi	r25, 0x0F	; 15
     d66:	99 0f       	add	r25, r25
     d68:	99 0f       	add	r25, r25
     d6a:	29 2f       	mov	r18, r25
     d6c:	22 0f       	add	r18, r18
     d6e:	22 0f       	add	r18, r18
     d70:	92 0f       	add	r25, r18
     d72:	89 1b       	sub	r24, r25
     d74:	48 b3       	in	r20, 0x18	; 24
     d76:	21 e0       	ldi	r18, 0x01	; 1
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	b9 01       	movw	r22, r18
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <PIN_WRITE+0x16e>
     d7e:	66 0f       	add	r22, r22
     d80:	77 1f       	adc	r23, r23
     d82:	8a 95       	dec	r24
     d84:	e2 f7       	brpl	.-8      	; 0xd7e <PIN_WRITE+0x16a>
     d86:	cb 01       	movw	r24, r22
     d88:	80 95       	com	r24
     d8a:	84 23       	and	r24, r20
     d8c:	88 bb       	out	0x18, r24	; 24
     d8e:	08 95       	ret
     d90:	99 e8       	ldi	r25, 0x89	; 137
     d92:	89 9f       	mul	r24, r25
     d94:	91 2d       	mov	r25, r1
     d96:	11 24       	eor	r1, r1
     d98:	92 95       	swap	r25
     d9a:	9f 70       	andi	r25, 0x0F	; 15
     d9c:	7e e1       	ldi	r23, 0x1E	; 30
     d9e:	97 9f       	mul	r25, r23
     da0:	80 19       	sub	r24, r0
     da2:	11 24       	eor	r1, r1
     da4:	45 b3       	in	r20, 0x15	; 21
     da6:	21 e0       	ldi	r18, 0x01	; 1
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	b9 01       	movw	r22, r18
     dac:	02 c0       	rjmp	.+4      	; 0xdb2 <PIN_WRITE+0x19e>
     dae:	66 0f       	add	r22, r22
     db0:	77 1f       	adc	r23, r23
     db2:	8a 95       	dec	r24
     db4:	e2 f7       	brpl	.-8      	; 0xdae <PIN_WRITE+0x19a>
     db6:	cb 01       	movw	r24, r22
     db8:	80 95       	com	r24
     dba:	84 23       	and	r24, r20
     dbc:	85 bb       	out	0x15, r24	; 21
     dbe:	08 95       	ret
     dc0:	9d ec       	ldi	r25, 0xCD	; 205
     dc2:	89 9f       	mul	r24, r25
     dc4:	91 2d       	mov	r25, r1
     dc6:	11 24       	eor	r1, r1
     dc8:	92 95       	swap	r25
     dca:	96 95       	lsr	r25
     dcc:	97 70       	andi	r25, 0x07	; 7
     dce:	78 e2       	ldi	r23, 0x28	; 40
     dd0:	97 9f       	mul	r25, r23
     dd2:	80 19       	sub	r24, r0
     dd4:	11 24       	eor	r1, r1
     dd6:	42 b3       	in	r20, 0x12	; 18
     dd8:	21 e0       	ldi	r18, 0x01	; 1
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	b9 01       	movw	r22, r18
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <PIN_WRITE+0x1d0>
     de0:	66 0f       	add	r22, r22
     de2:	77 1f       	adc	r23, r23
     de4:	8a 95       	dec	r24
     de6:	e2 f7       	brpl	.-8      	; 0xde0 <PIN_WRITE+0x1cc>
     de8:	cb 01       	movw	r24, r22
     dea:	80 95       	com	r24
     dec:	84 23       	and	r24, r20
     dee:	82 bb       	out	0x12, r24	; 18
     df0:	08 95       	ret

00000df2 <PIN_PULL_UP>:
     df2:	9d ec       	ldi	r25, 0xCD	; 205
     df4:	89 9f       	mul	r24, r25
     df6:	91 2d       	mov	r25, r1
     df8:	11 24       	eor	r1, r1
     dfa:	96 95       	lsr	r25
     dfc:	96 95       	lsr	r25
     dfe:	96 95       	lsr	r25
     e00:	66 23       	and	r22, r22
     e02:	09 f4       	brne	.+2      	; 0xe06 <PIN_PULL_UP+0x14>
     e04:	72 c0       	rjmp	.+228    	; 0xeea <PIN_PULL_UP+0xf8>
     e06:	61 30       	cpi	r22, 0x01	; 1
     e08:	09 f0       	breq	.+2      	; 0xe0c <PIN_PULL_UP+0x1a>
     e0a:	e1 c0       	rjmp	.+450    	; 0xfce <PIN_PULL_UP+0x1dc>
     e0c:	92 30       	cpi	r25, 0x02	; 2
     e0e:	21 f1       	breq	.+72     	; 0xe58 <PIN_PULL_UP+0x66>
     e10:	18 f4       	brcc	.+6      	; 0xe18 <PIN_PULL_UP+0x26>
     e12:	91 30       	cpi	r25, 0x01	; 1
     e14:	39 f0       	breq	.+14     	; 0xe24 <PIN_PULL_UP+0x32>
     e16:	08 95       	ret
     e18:	93 30       	cpi	r25, 0x03	; 3
     e1a:	c1 f1       	breq	.+112    	; 0xe8c <PIN_PULL_UP+0x9a>
     e1c:	94 30       	cpi	r25, 0x04	; 4
     e1e:	09 f4       	brne	.+2      	; 0xe22 <PIN_PULL_UP+0x30>
     e20:	4c c0       	rjmp	.+152    	; 0xeba <PIN_PULL_UP+0xc8>
     e22:	08 95       	ret
     e24:	9d ec       	ldi	r25, 0xCD	; 205
     e26:	89 9f       	mul	r24, r25
     e28:	91 2d       	mov	r25, r1
     e2a:	11 24       	eor	r1, r1
     e2c:	96 95       	lsr	r25
     e2e:	96 95       	lsr	r25
     e30:	96 95       	lsr	r25
     e32:	99 0f       	add	r25, r25
     e34:	29 2f       	mov	r18, r25
     e36:	22 0f       	add	r18, r18
     e38:	22 0f       	add	r18, r18
     e3a:	92 0f       	add	r25, r18
     e3c:	89 1b       	sub	r24, r25
     e3e:	4b b3       	in	r20, 0x1b	; 27
     e40:	21 e0       	ldi	r18, 0x01	; 1
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	b9 01       	movw	r22, r18
     e46:	02 c0       	rjmp	.+4      	; 0xe4c <PIN_PULL_UP+0x5a>
     e48:	66 0f       	add	r22, r22
     e4a:	77 1f       	adc	r23, r23
     e4c:	8a 95       	dec	r24
     e4e:	e2 f7       	brpl	.-8      	; 0xe48 <PIN_PULL_UP+0x56>
     e50:	cb 01       	movw	r24, r22
     e52:	84 2b       	or	r24, r20
     e54:	8b bb       	out	0x1b, r24	; 27
     e56:	08 95       	ret
     e58:	9d ec       	ldi	r25, 0xCD	; 205
     e5a:	89 9f       	mul	r24, r25
     e5c:	91 2d       	mov	r25, r1
     e5e:	11 24       	eor	r1, r1
     e60:	92 95       	swap	r25
     e62:	9f 70       	andi	r25, 0x0F	; 15
     e64:	99 0f       	add	r25, r25
     e66:	99 0f       	add	r25, r25
     e68:	29 2f       	mov	r18, r25
     e6a:	22 0f       	add	r18, r18
     e6c:	22 0f       	add	r18, r18
     e6e:	92 0f       	add	r25, r18
     e70:	89 1b       	sub	r24, r25
     e72:	48 b3       	in	r20, 0x18	; 24
     e74:	21 e0       	ldi	r18, 0x01	; 1
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	b9 01       	movw	r22, r18
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <PIN_PULL_UP+0x8e>
     e7c:	66 0f       	add	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	8a 95       	dec	r24
     e82:	e2 f7       	brpl	.-8      	; 0xe7c <PIN_PULL_UP+0x8a>
     e84:	cb 01       	movw	r24, r22
     e86:	84 2b       	or	r24, r20
     e88:	88 bb       	out	0x18, r24	; 24
     e8a:	08 95       	ret
     e8c:	99 e8       	ldi	r25, 0x89	; 137
     e8e:	89 9f       	mul	r24, r25
     e90:	91 2d       	mov	r25, r1
     e92:	11 24       	eor	r1, r1
     e94:	92 95       	swap	r25
     e96:	9f 70       	andi	r25, 0x0F	; 15
     e98:	7e e1       	ldi	r23, 0x1E	; 30
     e9a:	97 9f       	mul	r25, r23
     e9c:	80 19       	sub	r24, r0
     e9e:	11 24       	eor	r1, r1
     ea0:	45 b3       	in	r20, 0x15	; 21
     ea2:	21 e0       	ldi	r18, 0x01	; 1
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	b9 01       	movw	r22, r18
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <PIN_PULL_UP+0xbc>
     eaa:	66 0f       	add	r22, r22
     eac:	77 1f       	adc	r23, r23
     eae:	8a 95       	dec	r24
     eb0:	e2 f7       	brpl	.-8      	; 0xeaa <PIN_PULL_UP+0xb8>
     eb2:	cb 01       	movw	r24, r22
     eb4:	84 2b       	or	r24, r20
     eb6:	85 bb       	out	0x15, r24	; 21
     eb8:	08 95       	ret
     eba:	9d ec       	ldi	r25, 0xCD	; 205
     ebc:	89 9f       	mul	r24, r25
     ebe:	91 2d       	mov	r25, r1
     ec0:	11 24       	eor	r1, r1
     ec2:	92 95       	swap	r25
     ec4:	96 95       	lsr	r25
     ec6:	97 70       	andi	r25, 0x07	; 7
     ec8:	78 e2       	ldi	r23, 0x28	; 40
     eca:	97 9f       	mul	r25, r23
     ecc:	80 19       	sub	r24, r0
     ece:	11 24       	eor	r1, r1
     ed0:	42 b3       	in	r20, 0x12	; 18
     ed2:	21 e0       	ldi	r18, 0x01	; 1
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	b9 01       	movw	r22, r18
     ed8:	02 c0       	rjmp	.+4      	; 0xede <PIN_PULL_UP+0xec>
     eda:	66 0f       	add	r22, r22
     edc:	77 1f       	adc	r23, r23
     ede:	8a 95       	dec	r24
     ee0:	e2 f7       	brpl	.-8      	; 0xeda <PIN_PULL_UP+0xe8>
     ee2:	cb 01       	movw	r24, r22
     ee4:	84 2b       	or	r24, r20
     ee6:	82 bb       	out	0x12, r24	; 18
     ee8:	08 95       	ret
     eea:	92 30       	cpi	r25, 0x02	; 2
     eec:	29 f1       	breq	.+74     	; 0xf38 <PIN_PULL_UP+0x146>
     eee:	18 f4       	brcc	.+6      	; 0xef6 <PIN_PULL_UP+0x104>
     ef0:	91 30       	cpi	r25, 0x01	; 1
     ef2:	39 f0       	breq	.+14     	; 0xf02 <PIN_PULL_UP+0x110>
     ef4:	08 95       	ret
     ef6:	93 30       	cpi	r25, 0x03	; 3
     ef8:	d1 f1       	breq	.+116    	; 0xf6e <PIN_PULL_UP+0x17c>
     efa:	94 30       	cpi	r25, 0x04	; 4
     efc:	09 f4       	brne	.+2      	; 0xf00 <PIN_PULL_UP+0x10e>
     efe:	4f c0       	rjmp	.+158    	; 0xf9e <PIN_PULL_UP+0x1ac>
     f00:	08 95       	ret
     f02:	9d ec       	ldi	r25, 0xCD	; 205
     f04:	89 9f       	mul	r24, r25
     f06:	91 2d       	mov	r25, r1
     f08:	11 24       	eor	r1, r1
     f0a:	96 95       	lsr	r25
     f0c:	96 95       	lsr	r25
     f0e:	96 95       	lsr	r25
     f10:	99 0f       	add	r25, r25
     f12:	29 2f       	mov	r18, r25
     f14:	22 0f       	add	r18, r18
     f16:	22 0f       	add	r18, r18
     f18:	92 0f       	add	r25, r18
     f1a:	89 1b       	sub	r24, r25
     f1c:	4b b3       	in	r20, 0x1b	; 27
     f1e:	21 e0       	ldi	r18, 0x01	; 1
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	b9 01       	movw	r22, r18
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <PIN_PULL_UP+0x138>
     f26:	66 0f       	add	r22, r22
     f28:	77 1f       	adc	r23, r23
     f2a:	8a 95       	dec	r24
     f2c:	e2 f7       	brpl	.-8      	; 0xf26 <PIN_PULL_UP+0x134>
     f2e:	cb 01       	movw	r24, r22
     f30:	80 95       	com	r24
     f32:	84 23       	and	r24, r20
     f34:	8b bb       	out	0x1b, r24	; 27
     f36:	08 95       	ret
     f38:	9d ec       	ldi	r25, 0xCD	; 205
     f3a:	89 9f       	mul	r24, r25
     f3c:	91 2d       	mov	r25, r1
     f3e:	11 24       	eor	r1, r1
     f40:	92 95       	swap	r25
     f42:	9f 70       	andi	r25, 0x0F	; 15
     f44:	99 0f       	add	r25, r25
     f46:	99 0f       	add	r25, r25
     f48:	29 2f       	mov	r18, r25
     f4a:	22 0f       	add	r18, r18
     f4c:	22 0f       	add	r18, r18
     f4e:	92 0f       	add	r25, r18
     f50:	89 1b       	sub	r24, r25
     f52:	48 b3       	in	r20, 0x18	; 24
     f54:	21 e0       	ldi	r18, 0x01	; 1
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	b9 01       	movw	r22, r18
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <PIN_PULL_UP+0x16e>
     f5c:	66 0f       	add	r22, r22
     f5e:	77 1f       	adc	r23, r23
     f60:	8a 95       	dec	r24
     f62:	e2 f7       	brpl	.-8      	; 0xf5c <PIN_PULL_UP+0x16a>
     f64:	cb 01       	movw	r24, r22
     f66:	80 95       	com	r24
     f68:	84 23       	and	r24, r20
     f6a:	88 bb       	out	0x18, r24	; 24
     f6c:	08 95       	ret
     f6e:	99 e8       	ldi	r25, 0x89	; 137
     f70:	89 9f       	mul	r24, r25
     f72:	91 2d       	mov	r25, r1
     f74:	11 24       	eor	r1, r1
     f76:	92 95       	swap	r25
     f78:	9f 70       	andi	r25, 0x0F	; 15
     f7a:	7e e1       	ldi	r23, 0x1E	; 30
     f7c:	97 9f       	mul	r25, r23
     f7e:	80 19       	sub	r24, r0
     f80:	11 24       	eor	r1, r1
     f82:	45 b3       	in	r20, 0x15	; 21
     f84:	21 e0       	ldi	r18, 0x01	; 1
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	b9 01       	movw	r22, r18
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <PIN_PULL_UP+0x19e>
     f8c:	66 0f       	add	r22, r22
     f8e:	77 1f       	adc	r23, r23
     f90:	8a 95       	dec	r24
     f92:	e2 f7       	brpl	.-8      	; 0xf8c <PIN_PULL_UP+0x19a>
     f94:	cb 01       	movw	r24, r22
     f96:	80 95       	com	r24
     f98:	84 23       	and	r24, r20
     f9a:	85 bb       	out	0x15, r24	; 21
     f9c:	08 95       	ret
     f9e:	9d ec       	ldi	r25, 0xCD	; 205
     fa0:	89 9f       	mul	r24, r25
     fa2:	91 2d       	mov	r25, r1
     fa4:	11 24       	eor	r1, r1
     fa6:	92 95       	swap	r25
     fa8:	96 95       	lsr	r25
     faa:	97 70       	andi	r25, 0x07	; 7
     fac:	78 e2       	ldi	r23, 0x28	; 40
     fae:	97 9f       	mul	r25, r23
     fb0:	80 19       	sub	r24, r0
     fb2:	11 24       	eor	r1, r1
     fb4:	42 b3       	in	r20, 0x12	; 18
     fb6:	21 e0       	ldi	r18, 0x01	; 1
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	b9 01       	movw	r22, r18
     fbc:	02 c0       	rjmp	.+4      	; 0xfc2 <PIN_PULL_UP+0x1d0>
     fbe:	66 0f       	add	r22, r22
     fc0:	77 1f       	adc	r23, r23
     fc2:	8a 95       	dec	r24
     fc4:	e2 f7       	brpl	.-8      	; 0xfbe <PIN_PULL_UP+0x1cc>
     fc6:	cb 01       	movw	r24, r22
     fc8:	80 95       	com	r24
     fca:	84 23       	and	r24, r20
     fcc:	82 bb       	out	0x12, r24	; 18
     fce:	08 95       	ret

00000fd0 <PORT_WRITE>:
//                                                       PORT WRITE Function
//                                                      ---------------------

void PORT_WRITE(uint8 port,uint8 mode)        // takes the values of the port and the mode either high or low
{
	switch(port)                              // checking the port value either 1,2,3,4
     fd0:	82 30       	cpi	r24, 0x02	; 2
     fd2:	59 f0       	breq	.+22     	; 0xfea <PORT_WRITE+0x1a>
     fd4:	18 f4       	brcc	.+6      	; 0xfdc <PORT_WRITE+0xc>
     fd6:	81 30       	cpi	r24, 0x01	; 1
     fd8:	31 f0       	breq	.+12     	; 0xfe6 <PORT_WRITE+0x16>
     fda:	08 95       	ret
     fdc:	83 30       	cpi	r24, 0x03	; 3
     fde:	39 f0       	breq	.+14     	; 0xfee <PORT_WRITE+0x1e>
     fe0:	84 30       	cpi	r24, 0x04	; 4
     fe2:	39 f0       	breq	.+14     	; 0xff2 <PORT_WRITE+0x22>
     fe4:	08 95       	ret
	{
		case A:                               // case of using port A
		WRITE_A = mode;                       // make all pins in port A = 1 --> HIGH or 0 --> LOW
     fe6:	6b bb       	out	0x1b, r22	; 27
		break;                                // breaks case A
     fe8:	08 95       	ret
		
		case B:                               // case of using port B
		WRITE_B = mode;                       // make all pins in port B = 1 --> HIGH or 0 --> LOW
     fea:	68 bb       	out	0x18, r22	; 24
		break;                                // breaks case B
     fec:	08 95       	ret
		
		case C:                               // case of using port C
		WRITE_C = mode;                       // make all pins in port C = 1 --> HIGH or 0 --> LOW
     fee:	65 bb       	out	0x15, r22	; 21
		break;                                // breaks case C
     ff0:	08 95       	ret
		
		case D:                               // case of using port D
		WRITE_D = mode;                       // make all pins in port D = 1 --> HIGH or 0 --> LOW
     ff2:	62 bb       	out	0x12, r22	; 18
     ff4:	08 95       	ret

00000ff6 <INT_MODE>:
	PIN_MODE(INT2_DIO_PIN,INPUT);
	INT_MODE(INT_2,MODE);
}
void INT_MODE(uint8 INT_X,uint8 MODE)
{
	switch(INT_X)
     ff6:	81 30       	cpi	r24, 0x01	; 1
     ff8:	49 f1       	breq	.+82     	; 0x104c <INT_MODE+0x56>
     ffa:	20 f0       	brcs	.+8      	; 0x1004 <INT_MODE+0xe>
     ffc:	82 30       	cpi	r24, 0x02	; 2
     ffe:	09 f4       	brne	.+2      	; 0x1002 <INT_MODE+0xc>
    1000:	49 c0       	rjmp	.+146    	; 0x1094 <INT_MODE+0x9e>
    1002:	08 95       	ret
	{
		case INT_0:
		switch(MODE)
    1004:	61 30       	cpi	r22, 0x01	; 1
    1006:	69 f0       	breq	.+26     	; 0x1022 <INT_MODE+0x2c>
    1008:	28 f0       	brcs	.+10     	; 0x1014 <INT_MODE+0x1e>
    100a:	62 30       	cpi	r22, 0x02	; 2
    100c:	89 f0       	breq	.+34     	; 0x1030 <INT_MODE+0x3a>
    100e:	63 30       	cpi	r22, 0x03	; 3
    1010:	b1 f0       	breq	.+44     	; 0x103e <INT_MODE+0x48>
    1012:	08 95       	ret
		{
			case LOW_LEVEL_MODE:
			CLR_BIT(MCUC_REG,ISC00);
    1014:	85 b7       	in	r24, 0x35	; 53
    1016:	8e 7f       	andi	r24, 0xFE	; 254
    1018:	85 bf       	out	0x35, r24	; 53
			CLR_BIT(MCUC_REG,ISC01);
    101a:	85 b7       	in	r24, 0x35	; 53
    101c:	8d 7f       	andi	r24, 0xFD	; 253
    101e:	85 bf       	out	0x35, r24	; 53
			break;
    1020:	08 95       	ret
			/****************************/
			case ANY_CHANGE_MODE:
			SET_BIT(MCUC_REG,ISC00);
    1022:	85 b7       	in	r24, 0x35	; 53
    1024:	81 60       	ori	r24, 0x01	; 1
    1026:	85 bf       	out	0x35, r24	; 53
			CLR_BIT(MCUC_REG,ISC01);
    1028:	85 b7       	in	r24, 0x35	; 53
    102a:	8d 7f       	andi	r24, 0xFD	; 253
    102c:	85 bf       	out	0x35, r24	; 53
			break;
    102e:	08 95       	ret
			/****************************/
			case FALLING_EDGE_MODE:
			CLR_BIT(MCUC_REG,ISC00);
    1030:	85 b7       	in	r24, 0x35	; 53
    1032:	8e 7f       	andi	r24, 0xFE	; 254
    1034:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUC_REG,ISC01);
    1036:	85 b7       	in	r24, 0x35	; 53
    1038:	82 60       	ori	r24, 0x02	; 2
    103a:	85 bf       	out	0x35, r24	; 53
			break;
    103c:	08 95       	ret
			/**************************/
			case RISING_EDGE_MODE:
			SET_BIT(MCUC_REG,ISC00);
    103e:	85 b7       	in	r24, 0x35	; 53
    1040:	81 60       	ori	r24, 0x01	; 1
    1042:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUC_REG,ISC01);
    1044:	85 b7       	in	r24, 0x35	; 53
    1046:	82 60       	ori	r24, 0x02	; 2
    1048:	85 bf       	out	0x35, r24	; 53
			break;
    104a:	08 95       	ret
		}
		break;
		case INT_1:
		switch(MODE)
    104c:	61 30       	cpi	r22, 0x01	; 1
    104e:	69 f0       	breq	.+26     	; 0x106a <INT_MODE+0x74>
    1050:	28 f0       	brcs	.+10     	; 0x105c <INT_MODE+0x66>
    1052:	62 30       	cpi	r22, 0x02	; 2
    1054:	89 f0       	breq	.+34     	; 0x1078 <INT_MODE+0x82>
    1056:	63 30       	cpi	r22, 0x03	; 3
    1058:	b1 f0       	breq	.+44     	; 0x1086 <INT_MODE+0x90>
    105a:	08 95       	ret
		{
			case LOW_LEVEL_MODE:
			CLR_BIT(MCUC_REG,ISC10);
    105c:	85 b7       	in	r24, 0x35	; 53
    105e:	8b 7f       	andi	r24, 0xFB	; 251
    1060:	85 bf       	out	0x35, r24	; 53
			CLR_BIT(MCUC_REG,ISC11);
    1062:	85 b7       	in	r24, 0x35	; 53
    1064:	87 7f       	andi	r24, 0xF7	; 247
    1066:	85 bf       	out	0x35, r24	; 53
			break;
    1068:	08 95       	ret
			/****************************/
			case ANY_CHANGE_MODE:
			SET_BIT(MCUC_REG,ISC10);
    106a:	85 b7       	in	r24, 0x35	; 53
    106c:	84 60       	ori	r24, 0x04	; 4
    106e:	85 bf       	out	0x35, r24	; 53
			CLR_BIT(MCUC_REG,ISC11);
    1070:	85 b7       	in	r24, 0x35	; 53
    1072:	87 7f       	andi	r24, 0xF7	; 247
    1074:	85 bf       	out	0x35, r24	; 53
			break;
    1076:	08 95       	ret
			/****************************/
			case FALLING_EDGE_MODE:
			CLR_BIT(MCUC_REG,ISC10);
    1078:	85 b7       	in	r24, 0x35	; 53
    107a:	8b 7f       	andi	r24, 0xFB	; 251
    107c:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUC_REG,ISC11);
    107e:	85 b7       	in	r24, 0x35	; 53
    1080:	88 60       	ori	r24, 0x08	; 8
    1082:	85 bf       	out	0x35, r24	; 53
			break;
    1084:	08 95       	ret
			/**************************/
			case RISING_EDGE_MODE:
			SET_BIT(MCUC_REG,ISC10);
    1086:	85 b7       	in	r24, 0x35	; 53
    1088:	84 60       	ori	r24, 0x04	; 4
    108a:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUC_REG,ISC11);
    108c:	85 b7       	in	r24, 0x35	; 53
    108e:	88 60       	ori	r24, 0x08	; 8
    1090:	85 bf       	out	0x35, r24	; 53
			break;
    1092:	08 95       	ret
		}
		break;
		case INT_2:
		switch(MODE)
    1094:	63 30       	cpi	r22, 0x03	; 3
    1096:	18 f0       	brcs	.+6      	; 0x109e <INT_MODE+0xa8>
    1098:	63 30       	cpi	r22, 0x03	; 3
    109a:	29 f0       	breq	.+10     	; 0x10a6 <INT_MODE+0xb0>
    109c:	08 95       	ret
		{
			case LOW_LEVEL_MODE:
			case ANY_CHANGE_MODE:
			case FALLING_EDGE_MODE:
			CLR_BIT(MCUCS_REG,ISC2);
    109e:	84 b7       	in	r24, 0x34	; 52
    10a0:	8f 7b       	andi	r24, 0xBF	; 191
    10a2:	84 bf       	out	0x34, r24	; 52
			break;
    10a4:	08 95       	ret
			/**************************/
			case RISING_EDGE_MODE:
			SET_BIT(MCUCS_REG,ISC2);
    10a6:	84 b7       	in	r24, 0x34	; 52
    10a8:	80 64       	ori	r24, 0x40	; 64
    10aa:	84 bf       	out	0x34, r24	; 52
    10ac:	08 95       	ret

000010ae <ENABLE_INT0>:



#include "INTERRUPT.h"
void ENABLE_INT0(uint8 MODE)
{
    10ae:	cf 93       	push	r28
    10b0:	c8 2f       	mov	r28, r24
	SET_BIT(S_REG,I);
    10b2:	8f b7       	in	r24, 0x3f	; 63
    10b4:	80 68       	ori	r24, 0x80	; 128
    10b6:	8f bf       	out	0x3f, r24	; 63
	SET_BIT(GIC_REG,INT0_PIN);
    10b8:	8b b7       	in	r24, 0x3b	; 59
    10ba:	80 64       	ori	r24, 0x40	; 64
    10bc:	8b bf       	out	0x3b, r24	; 59
	PIN_MODE(INT0_DIO_PIN,INPUT);
    10be:	60 e0       	ldi	r22, 0x00	; 0
    10c0:	8a e2       	ldi	r24, 0x2A	; 42
    10c2:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	INT_MODE(INT_0,MODE);
    10c6:	6c 2f       	mov	r22, r28
    10c8:	80 e0       	ldi	r24, 0x00	; 0
    10ca:	0e 94 fb 07 	call	0xff6	; 0xff6 <INT_MODE>
}
    10ce:	cf 91       	pop	r28
    10d0:	08 95       	ret

000010d2 <ENABLE_INT1>:
void ENABLE_INT1(uint8 MODE)
{
    10d2:	cf 93       	push	r28
    10d4:	c8 2f       	mov	r28, r24
	SET_BIT(S_REG,I);
    10d6:	8f b7       	in	r24, 0x3f	; 63
    10d8:	80 68       	ori	r24, 0x80	; 128
    10da:	8f bf       	out	0x3f, r24	; 63
	SET_BIT(GIC_REG,INT1_PIN);
    10dc:	8b b7       	in	r24, 0x3b	; 59
    10de:	80 68       	ori	r24, 0x80	; 128
    10e0:	8b bf       	out	0x3b, r24	; 59
	PIN_MODE(INT1_DIO_PIN,INPUT);
    10e2:	60 e0       	ldi	r22, 0x00	; 0
    10e4:	8b e2       	ldi	r24, 0x2B	; 43
    10e6:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	INT_MODE(INT_1,MODE);
    10ea:	6c 2f       	mov	r22, r28
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	0e 94 fb 07 	call	0xff6	; 0xff6 <INT_MODE>
}
    10f2:	cf 91       	pop	r28
    10f4:	08 95       	ret

000010f6 <ENABLE_INT2>:
void ENABLE_INT2(uint8 MODE)
{
    10f6:	cf 93       	push	r28
    10f8:	c8 2f       	mov	r28, r24
	SET_BIT(S_REG,I);
    10fa:	8f b7       	in	r24, 0x3f	; 63
    10fc:	80 68       	ori	r24, 0x80	; 128
    10fe:	8f bf       	out	0x3f, r24	; 63
	SET_BIT(GIC_REG,INT2_PIN);
    1100:	8b b7       	in	r24, 0x3b	; 59
    1102:	80 62       	ori	r24, 0x20	; 32
    1104:	8b bf       	out	0x3b, r24	; 59
	PIN_MODE(INT2_DIO_PIN,INPUT);
    1106:	60 e0       	ldi	r22, 0x00	; 0
    1108:	86 e1       	ldi	r24, 0x16	; 22
    110a:	0e 94 1b 05 	call	0xa36	; 0xa36 <PIN_MODE>
	INT_MODE(INT_2,MODE);
    110e:	6c 2f       	mov	r22, r28
    1110:	82 e0       	ldi	r24, 0x02	; 2
    1112:	0e 94 fb 07 	call	0xff6	; 0xff6 <INT_MODE>
}
    1116:	cf 91       	pop	r28
    1118:	08 95       	ret

0000111a <UART_INIT>:
#include "UART_CFG.h"

// (\r as \n for virtual terminal)
void UART_INIT (void)
{
	SET_BIT(UCSRB,3);	//Tx enable
    111a:	8a b1       	in	r24, 0x0a	; 10
    111c:	88 60       	ori	r24, 0x08	; 8
    111e:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB,4);	//Rx enable
    1120:	8a b1       	in	r24, 0x0a	; 10
    1122:	80 61       	ori	r24, 0x10	; 16
    1124:	8a b9       	out	0x0a, r24	; 10
	

	
	
	CLR_BIT(UCSRA,1); //ASync, Normal Mode
    1126:	8b b1       	in	r24, 0x0b	; 11
    1128:	8d 7f       	andi	r24, 0xFD	; 253
    112a:	8b b9       	out	0x0b, r24	; 11
	//UBRRL=160000000/(16*(BAUD_RATE)) - 1;
	
	//Baud Rate = 9600bps & f=16MHz, UBRR=103
	UBRRL=103;  //<=255 else UBRRH
    112c:	87 e6       	ldi	r24, 0x67	; 103
    112e:	89 b9       	out	0x09, r24	; 9
    1130:	08 95       	ret

00001132 <UART_TRANSMIT_CHR>:
void UART_TRANSMIT_CHR (uint8 data)
{
	//pooling
	//UDRE FLAG INITIALLY 1
	//while(!(UCSRA & (1<<UDRE)))
	while(!GET_BIT(UCSRA,5)); //Check UDR Buffer if ready to receive data
    1132:	5d 9b       	sbis	0x0b, 5	; 11
    1134:	fe cf       	rjmp	.-4      	; 0x1132 <UART_TRANSMIT_CHR>
	UDR = data;
    1136:	8c b9       	out	0x0c, r24	; 12
    1138:	08 95       	ret

0000113a <UART_TRANSMIT_STR>:
	
}

void UART_TRANSMIT_STR (uint8*str)
{
    113a:	0f 93       	push	r16
    113c:	1f 93       	push	r17
    113e:	cf 93       	push	r28
    1140:	8c 01       	movw	r16, r24
	uint8 i=0;
    1142:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i]!='\0')
    1144:	03 c0       	rjmp	.+6      	; 0x114c <UART_TRANSMIT_STR+0x12>
	{
		UART_TRANSMIT_CHR(str[i]);
    1146:	0e 94 99 08 	call	0x1132	; 0x1132 <UART_TRANSMIT_CHR>
		i++;
    114a:	cf 5f       	subi	r28, 0xFF	; 255
}

void UART_TRANSMIT_STR (uint8*str)
{
	uint8 i=0;
	while(str[i]!='\0')
    114c:	f8 01       	movw	r30, r16
    114e:	ec 0f       	add	r30, r28
    1150:	f1 1d       	adc	r31, r1
    1152:	80 81       	ld	r24, Z
    1154:	81 11       	cpse	r24, r1
    1156:	f7 cf       	rjmp	.-18     	; 0x1146 <UART_TRANSMIT_STR+0xc>
	{
		UART_TRANSMIT_CHR(str[i]);
		i++;
	}
}
    1158:	cf 91       	pop	r28
    115a:	1f 91       	pop	r17
    115c:	0f 91       	pop	r16
    115e:	08 95       	ret

00001160 <__divsf3>:
    1160:	0e 94 c4 08 	call	0x1188	; 0x1188 <__divsf3x>
    1164:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_round>
    1168:	0e 94 9e 09 	call	0x133c	; 0x133c <__fp_pscB>
    116c:	58 f0       	brcs	.+22     	; 0x1184 <__divsf3+0x24>
    116e:	0e 94 97 09 	call	0x132e	; 0x132e <__fp_pscA>
    1172:	40 f0       	brcs	.+16     	; 0x1184 <__divsf3+0x24>
    1174:	29 f4       	brne	.+10     	; 0x1180 <__divsf3+0x20>
    1176:	5f 3f       	cpi	r21, 0xFF	; 255
    1178:	29 f0       	breq	.+10     	; 0x1184 <__divsf3+0x24>
    117a:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__fp_inf>
    117e:	51 11       	cpse	r21, r1
    1180:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__fp_szero>
    1184:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__fp_nan>

00001188 <__divsf3x>:
    1188:	0e 94 b6 09 	call	0x136c	; 0x136c <__fp_split3>
    118c:	68 f3       	brcs	.-38     	; 0x1168 <__divsf3+0x8>

0000118e <__divsf3_pse>:
    118e:	99 23       	and	r25, r25
    1190:	b1 f3       	breq	.-20     	; 0x117e <__divsf3+0x1e>
    1192:	55 23       	and	r21, r21
    1194:	91 f3       	breq	.-28     	; 0x117a <__divsf3+0x1a>
    1196:	95 1b       	sub	r25, r21
    1198:	55 0b       	sbc	r21, r21
    119a:	bb 27       	eor	r27, r27
    119c:	aa 27       	eor	r26, r26
    119e:	62 17       	cp	r22, r18
    11a0:	73 07       	cpc	r23, r19
    11a2:	84 07       	cpc	r24, r20
    11a4:	38 f0       	brcs	.+14     	; 0x11b4 <__divsf3_pse+0x26>
    11a6:	9f 5f       	subi	r25, 0xFF	; 255
    11a8:	5f 4f       	sbci	r21, 0xFF	; 255
    11aa:	22 0f       	add	r18, r18
    11ac:	33 1f       	adc	r19, r19
    11ae:	44 1f       	adc	r20, r20
    11b0:	aa 1f       	adc	r26, r26
    11b2:	a9 f3       	breq	.-22     	; 0x119e <__divsf3_pse+0x10>
    11b4:	35 d0       	rcall	.+106    	; 0x1220 <__divsf3_pse+0x92>
    11b6:	0e 2e       	mov	r0, r30
    11b8:	3a f0       	brmi	.+14     	; 0x11c8 <__divsf3_pse+0x3a>
    11ba:	e0 e8       	ldi	r30, 0x80	; 128
    11bc:	32 d0       	rcall	.+100    	; 0x1222 <__divsf3_pse+0x94>
    11be:	91 50       	subi	r25, 0x01	; 1
    11c0:	50 40       	sbci	r21, 0x00	; 0
    11c2:	e6 95       	lsr	r30
    11c4:	00 1c       	adc	r0, r0
    11c6:	ca f7       	brpl	.-14     	; 0x11ba <__divsf3_pse+0x2c>
    11c8:	2b d0       	rcall	.+86     	; 0x1220 <__divsf3_pse+0x92>
    11ca:	fe 2f       	mov	r31, r30
    11cc:	29 d0       	rcall	.+82     	; 0x1220 <__divsf3_pse+0x92>
    11ce:	66 0f       	add	r22, r22
    11d0:	77 1f       	adc	r23, r23
    11d2:	88 1f       	adc	r24, r24
    11d4:	bb 1f       	adc	r27, r27
    11d6:	26 17       	cp	r18, r22
    11d8:	37 07       	cpc	r19, r23
    11da:	48 07       	cpc	r20, r24
    11dc:	ab 07       	cpc	r26, r27
    11de:	b0 e8       	ldi	r27, 0x80	; 128
    11e0:	09 f0       	breq	.+2      	; 0x11e4 <__divsf3_pse+0x56>
    11e2:	bb 0b       	sbc	r27, r27
    11e4:	80 2d       	mov	r24, r0
    11e6:	bf 01       	movw	r22, r30
    11e8:	ff 27       	eor	r31, r31
    11ea:	93 58       	subi	r25, 0x83	; 131
    11ec:	5f 4f       	sbci	r21, 0xFF	; 255
    11ee:	3a f0       	brmi	.+14     	; 0x11fe <__divsf3_pse+0x70>
    11f0:	9e 3f       	cpi	r25, 0xFE	; 254
    11f2:	51 05       	cpc	r21, r1
    11f4:	78 f0       	brcs	.+30     	; 0x1214 <__divsf3_pse+0x86>
    11f6:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__fp_inf>
    11fa:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__fp_szero>
    11fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1200:	e4 f3       	brlt	.-8      	; 0x11fa <__divsf3_pse+0x6c>
    1202:	98 3e       	cpi	r25, 0xE8	; 232
    1204:	d4 f3       	brlt	.-12     	; 0x11fa <__divsf3_pse+0x6c>
    1206:	86 95       	lsr	r24
    1208:	77 95       	ror	r23
    120a:	67 95       	ror	r22
    120c:	b7 95       	ror	r27
    120e:	f7 95       	ror	r31
    1210:	9f 5f       	subi	r25, 0xFF	; 255
    1212:	c9 f7       	brne	.-14     	; 0x1206 <__divsf3_pse+0x78>
    1214:	88 0f       	add	r24, r24
    1216:	91 1d       	adc	r25, r1
    1218:	96 95       	lsr	r25
    121a:	87 95       	ror	r24
    121c:	97 f9       	bld	r25, 7
    121e:	08 95       	ret
    1220:	e1 e0       	ldi	r30, 0x01	; 1
    1222:	66 0f       	add	r22, r22
    1224:	77 1f       	adc	r23, r23
    1226:	88 1f       	adc	r24, r24
    1228:	bb 1f       	adc	r27, r27
    122a:	62 17       	cp	r22, r18
    122c:	73 07       	cpc	r23, r19
    122e:	84 07       	cpc	r24, r20
    1230:	ba 07       	cpc	r27, r26
    1232:	20 f0       	brcs	.+8      	; 0x123c <__divsf3_pse+0xae>
    1234:	62 1b       	sub	r22, r18
    1236:	73 0b       	sbc	r23, r19
    1238:	84 0b       	sbc	r24, r20
    123a:	ba 0b       	sbc	r27, r26
    123c:	ee 1f       	adc	r30, r30
    123e:	88 f7       	brcc	.-30     	; 0x1222 <__divsf3_pse+0x94>
    1240:	e0 95       	com	r30
    1242:	08 95       	ret

00001244 <__fixunssfsi>:
    1244:	0e 94 be 09 	call	0x137c	; 0x137c <__fp_splitA>
    1248:	88 f0       	brcs	.+34     	; 0x126c <__fixunssfsi+0x28>
    124a:	9f 57       	subi	r25, 0x7F	; 127
    124c:	98 f0       	brcs	.+38     	; 0x1274 <__fixunssfsi+0x30>
    124e:	b9 2f       	mov	r27, r25
    1250:	99 27       	eor	r25, r25
    1252:	b7 51       	subi	r27, 0x17	; 23
    1254:	b0 f0       	brcs	.+44     	; 0x1282 <__fixunssfsi+0x3e>
    1256:	e1 f0       	breq	.+56     	; 0x1290 <__fixunssfsi+0x4c>
    1258:	66 0f       	add	r22, r22
    125a:	77 1f       	adc	r23, r23
    125c:	88 1f       	adc	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	1a f0       	brmi	.+6      	; 0x1268 <__fixunssfsi+0x24>
    1262:	ba 95       	dec	r27
    1264:	c9 f7       	brne	.-14     	; 0x1258 <__fixunssfsi+0x14>
    1266:	14 c0       	rjmp	.+40     	; 0x1290 <__fixunssfsi+0x4c>
    1268:	b1 30       	cpi	r27, 0x01	; 1
    126a:	91 f0       	breq	.+36     	; 0x1290 <__fixunssfsi+0x4c>
    126c:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <__fp_zero>
    1270:	b1 e0       	ldi	r27, 0x01	; 1
    1272:	08 95       	ret
    1274:	0c 94 d8 09 	jmp	0x13b0	; 0x13b0 <__fp_zero>
    1278:	67 2f       	mov	r22, r23
    127a:	78 2f       	mov	r23, r24
    127c:	88 27       	eor	r24, r24
    127e:	b8 5f       	subi	r27, 0xF8	; 248
    1280:	39 f0       	breq	.+14     	; 0x1290 <__fixunssfsi+0x4c>
    1282:	b9 3f       	cpi	r27, 0xF9	; 249
    1284:	cc f3       	brlt	.-14     	; 0x1278 <__fixunssfsi+0x34>
    1286:	86 95       	lsr	r24
    1288:	77 95       	ror	r23
    128a:	67 95       	ror	r22
    128c:	b3 95       	inc	r27
    128e:	d9 f7       	brne	.-10     	; 0x1286 <__fixunssfsi+0x42>
    1290:	3e f4       	brtc	.+14     	; 0x12a0 <__fixunssfsi+0x5c>
    1292:	90 95       	com	r25
    1294:	80 95       	com	r24
    1296:	70 95       	com	r23
    1298:	61 95       	neg	r22
    129a:	7f 4f       	sbci	r23, 0xFF	; 255
    129c:	8f 4f       	sbci	r24, 0xFF	; 255
    129e:	9f 4f       	sbci	r25, 0xFF	; 255
    12a0:	08 95       	ret

000012a2 <__floatunsisf>:
    12a2:	e8 94       	clt
    12a4:	09 c0       	rjmp	.+18     	; 0x12b8 <__floatsisf+0x12>

000012a6 <__floatsisf>:
    12a6:	97 fb       	bst	r25, 7
    12a8:	3e f4       	brtc	.+14     	; 0x12b8 <__floatsisf+0x12>
    12aa:	90 95       	com	r25
    12ac:	80 95       	com	r24
    12ae:	70 95       	com	r23
    12b0:	61 95       	neg	r22
    12b2:	7f 4f       	sbci	r23, 0xFF	; 255
    12b4:	8f 4f       	sbci	r24, 0xFF	; 255
    12b6:	9f 4f       	sbci	r25, 0xFF	; 255
    12b8:	99 23       	and	r25, r25
    12ba:	a9 f0       	breq	.+42     	; 0x12e6 <__floatsisf+0x40>
    12bc:	f9 2f       	mov	r31, r25
    12be:	96 e9       	ldi	r25, 0x96	; 150
    12c0:	bb 27       	eor	r27, r27
    12c2:	93 95       	inc	r25
    12c4:	f6 95       	lsr	r31
    12c6:	87 95       	ror	r24
    12c8:	77 95       	ror	r23
    12ca:	67 95       	ror	r22
    12cc:	b7 95       	ror	r27
    12ce:	f1 11       	cpse	r31, r1
    12d0:	f8 cf       	rjmp	.-16     	; 0x12c2 <__floatsisf+0x1c>
    12d2:	fa f4       	brpl	.+62     	; 0x1312 <__floatsisf+0x6c>
    12d4:	bb 0f       	add	r27, r27
    12d6:	11 f4       	brne	.+4      	; 0x12dc <__floatsisf+0x36>
    12d8:	60 ff       	sbrs	r22, 0
    12da:	1b c0       	rjmp	.+54     	; 0x1312 <__floatsisf+0x6c>
    12dc:	6f 5f       	subi	r22, 0xFF	; 255
    12de:	7f 4f       	sbci	r23, 0xFF	; 255
    12e0:	8f 4f       	sbci	r24, 0xFF	; 255
    12e2:	9f 4f       	sbci	r25, 0xFF	; 255
    12e4:	16 c0       	rjmp	.+44     	; 0x1312 <__floatsisf+0x6c>
    12e6:	88 23       	and	r24, r24
    12e8:	11 f0       	breq	.+4      	; 0x12ee <__floatsisf+0x48>
    12ea:	96 e9       	ldi	r25, 0x96	; 150
    12ec:	11 c0       	rjmp	.+34     	; 0x1310 <__floatsisf+0x6a>
    12ee:	77 23       	and	r23, r23
    12f0:	21 f0       	breq	.+8      	; 0x12fa <__floatsisf+0x54>
    12f2:	9e e8       	ldi	r25, 0x8E	; 142
    12f4:	87 2f       	mov	r24, r23
    12f6:	76 2f       	mov	r23, r22
    12f8:	05 c0       	rjmp	.+10     	; 0x1304 <__floatsisf+0x5e>
    12fa:	66 23       	and	r22, r22
    12fc:	71 f0       	breq	.+28     	; 0x131a <__floatsisf+0x74>
    12fe:	96 e8       	ldi	r25, 0x86	; 134
    1300:	86 2f       	mov	r24, r22
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	2a f0       	brmi	.+10     	; 0x1312 <__floatsisf+0x6c>
    1308:	9a 95       	dec	r25
    130a:	66 0f       	add	r22, r22
    130c:	77 1f       	adc	r23, r23
    130e:	88 1f       	adc	r24, r24
    1310:	da f7       	brpl	.-10     	; 0x1308 <__floatsisf+0x62>
    1312:	88 0f       	add	r24, r24
    1314:	96 95       	lsr	r25
    1316:	87 95       	ror	r24
    1318:	97 f9       	bld	r25, 7
    131a:	08 95       	ret

0000131c <__fp_inf>:
    131c:	97 f9       	bld	r25, 7
    131e:	9f 67       	ori	r25, 0x7F	; 127
    1320:	80 e8       	ldi	r24, 0x80	; 128
    1322:	70 e0       	ldi	r23, 0x00	; 0
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	08 95       	ret

00001328 <__fp_nan>:
    1328:	9f ef       	ldi	r25, 0xFF	; 255
    132a:	80 ec       	ldi	r24, 0xC0	; 192
    132c:	08 95       	ret

0000132e <__fp_pscA>:
    132e:	00 24       	eor	r0, r0
    1330:	0a 94       	dec	r0
    1332:	16 16       	cp	r1, r22
    1334:	17 06       	cpc	r1, r23
    1336:	18 06       	cpc	r1, r24
    1338:	09 06       	cpc	r0, r25
    133a:	08 95       	ret

0000133c <__fp_pscB>:
    133c:	00 24       	eor	r0, r0
    133e:	0a 94       	dec	r0
    1340:	12 16       	cp	r1, r18
    1342:	13 06       	cpc	r1, r19
    1344:	14 06       	cpc	r1, r20
    1346:	05 06       	cpc	r0, r21
    1348:	08 95       	ret

0000134a <__fp_round>:
    134a:	09 2e       	mov	r0, r25
    134c:	03 94       	inc	r0
    134e:	00 0c       	add	r0, r0
    1350:	11 f4       	brne	.+4      	; 0x1356 <__fp_round+0xc>
    1352:	88 23       	and	r24, r24
    1354:	52 f0       	brmi	.+20     	; 0x136a <__fp_round+0x20>
    1356:	bb 0f       	add	r27, r27
    1358:	40 f4       	brcc	.+16     	; 0x136a <__fp_round+0x20>
    135a:	bf 2b       	or	r27, r31
    135c:	11 f4       	brne	.+4      	; 0x1362 <__fp_round+0x18>
    135e:	60 ff       	sbrs	r22, 0
    1360:	04 c0       	rjmp	.+8      	; 0x136a <__fp_round+0x20>
    1362:	6f 5f       	subi	r22, 0xFF	; 255
    1364:	7f 4f       	sbci	r23, 0xFF	; 255
    1366:	8f 4f       	sbci	r24, 0xFF	; 255
    1368:	9f 4f       	sbci	r25, 0xFF	; 255
    136a:	08 95       	ret

0000136c <__fp_split3>:
    136c:	57 fd       	sbrc	r21, 7
    136e:	90 58       	subi	r25, 0x80	; 128
    1370:	44 0f       	add	r20, r20
    1372:	55 1f       	adc	r21, r21
    1374:	59 f0       	breq	.+22     	; 0x138c <__fp_splitA+0x10>
    1376:	5f 3f       	cpi	r21, 0xFF	; 255
    1378:	71 f0       	breq	.+28     	; 0x1396 <__fp_splitA+0x1a>
    137a:	47 95       	ror	r20

0000137c <__fp_splitA>:
    137c:	88 0f       	add	r24, r24
    137e:	97 fb       	bst	r25, 7
    1380:	99 1f       	adc	r25, r25
    1382:	61 f0       	breq	.+24     	; 0x139c <__fp_splitA+0x20>
    1384:	9f 3f       	cpi	r25, 0xFF	; 255
    1386:	79 f0       	breq	.+30     	; 0x13a6 <__fp_splitA+0x2a>
    1388:	87 95       	ror	r24
    138a:	08 95       	ret
    138c:	12 16       	cp	r1, r18
    138e:	13 06       	cpc	r1, r19
    1390:	14 06       	cpc	r1, r20
    1392:	55 1f       	adc	r21, r21
    1394:	f2 cf       	rjmp	.-28     	; 0x137a <__fp_split3+0xe>
    1396:	46 95       	lsr	r20
    1398:	f1 df       	rcall	.-30     	; 0x137c <__fp_splitA>
    139a:	08 c0       	rjmp	.+16     	; 0x13ac <__fp_splitA+0x30>
    139c:	16 16       	cp	r1, r22
    139e:	17 06       	cpc	r1, r23
    13a0:	18 06       	cpc	r1, r24
    13a2:	99 1f       	adc	r25, r25
    13a4:	f1 cf       	rjmp	.-30     	; 0x1388 <__fp_splitA+0xc>
    13a6:	86 95       	lsr	r24
    13a8:	71 05       	cpc	r23, r1
    13aa:	61 05       	cpc	r22, r1
    13ac:	08 94       	sec
    13ae:	08 95       	ret

000013b0 <__fp_zero>:
    13b0:	e8 94       	clt

000013b2 <__fp_szero>:
    13b2:	bb 27       	eor	r27, r27
    13b4:	66 27       	eor	r22, r22
    13b6:	77 27       	eor	r23, r23
    13b8:	cb 01       	movw	r24, r22
    13ba:	97 f9       	bld	r25, 7
    13bc:	08 95       	ret

000013be <__mulsf3>:
    13be:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3x>
    13c2:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__fp_round>
    13c6:	0e 94 97 09 	call	0x132e	; 0x132e <__fp_pscA>
    13ca:	38 f0       	brcs	.+14     	; 0x13da <__mulsf3+0x1c>
    13cc:	0e 94 9e 09 	call	0x133c	; 0x133c <__fp_pscB>
    13d0:	20 f0       	brcs	.+8      	; 0x13da <__mulsf3+0x1c>
    13d2:	95 23       	and	r25, r21
    13d4:	11 f0       	breq	.+4      	; 0x13da <__mulsf3+0x1c>
    13d6:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__fp_inf>
    13da:	0c 94 94 09 	jmp	0x1328	; 0x1328 <__fp_nan>
    13de:	11 24       	eor	r1, r1
    13e0:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__fp_szero>

000013e4 <__mulsf3x>:
    13e4:	0e 94 b6 09 	call	0x136c	; 0x136c <__fp_split3>
    13e8:	70 f3       	brcs	.-36     	; 0x13c6 <__mulsf3+0x8>

000013ea <__mulsf3_pse>:
    13ea:	95 9f       	mul	r25, r21
    13ec:	c1 f3       	breq	.-16     	; 0x13de <__mulsf3+0x20>
    13ee:	95 0f       	add	r25, r21
    13f0:	50 e0       	ldi	r21, 0x00	; 0
    13f2:	55 1f       	adc	r21, r21
    13f4:	62 9f       	mul	r22, r18
    13f6:	f0 01       	movw	r30, r0
    13f8:	72 9f       	mul	r23, r18
    13fa:	bb 27       	eor	r27, r27
    13fc:	f0 0d       	add	r31, r0
    13fe:	b1 1d       	adc	r27, r1
    1400:	63 9f       	mul	r22, r19
    1402:	aa 27       	eor	r26, r26
    1404:	f0 0d       	add	r31, r0
    1406:	b1 1d       	adc	r27, r1
    1408:	aa 1f       	adc	r26, r26
    140a:	64 9f       	mul	r22, r20
    140c:	66 27       	eor	r22, r22
    140e:	b0 0d       	add	r27, r0
    1410:	a1 1d       	adc	r26, r1
    1412:	66 1f       	adc	r22, r22
    1414:	82 9f       	mul	r24, r18
    1416:	22 27       	eor	r18, r18
    1418:	b0 0d       	add	r27, r0
    141a:	a1 1d       	adc	r26, r1
    141c:	62 1f       	adc	r22, r18
    141e:	73 9f       	mul	r23, r19
    1420:	b0 0d       	add	r27, r0
    1422:	a1 1d       	adc	r26, r1
    1424:	62 1f       	adc	r22, r18
    1426:	83 9f       	mul	r24, r19
    1428:	a0 0d       	add	r26, r0
    142a:	61 1d       	adc	r22, r1
    142c:	22 1f       	adc	r18, r18
    142e:	74 9f       	mul	r23, r20
    1430:	33 27       	eor	r19, r19
    1432:	a0 0d       	add	r26, r0
    1434:	61 1d       	adc	r22, r1
    1436:	23 1f       	adc	r18, r19
    1438:	84 9f       	mul	r24, r20
    143a:	60 0d       	add	r22, r0
    143c:	21 1d       	adc	r18, r1
    143e:	82 2f       	mov	r24, r18
    1440:	76 2f       	mov	r23, r22
    1442:	6a 2f       	mov	r22, r26
    1444:	11 24       	eor	r1, r1
    1446:	9f 57       	subi	r25, 0x7F	; 127
    1448:	50 40       	sbci	r21, 0x00	; 0
    144a:	9a f0       	brmi	.+38     	; 0x1472 <__mulsf3_pse+0x88>
    144c:	f1 f0       	breq	.+60     	; 0x148a <__mulsf3_pse+0xa0>
    144e:	88 23       	and	r24, r24
    1450:	4a f0       	brmi	.+18     	; 0x1464 <__mulsf3_pse+0x7a>
    1452:	ee 0f       	add	r30, r30
    1454:	ff 1f       	adc	r31, r31
    1456:	bb 1f       	adc	r27, r27
    1458:	66 1f       	adc	r22, r22
    145a:	77 1f       	adc	r23, r23
    145c:	88 1f       	adc	r24, r24
    145e:	91 50       	subi	r25, 0x01	; 1
    1460:	50 40       	sbci	r21, 0x00	; 0
    1462:	a9 f7       	brne	.-22     	; 0x144e <__mulsf3_pse+0x64>
    1464:	9e 3f       	cpi	r25, 0xFE	; 254
    1466:	51 05       	cpc	r21, r1
    1468:	80 f0       	brcs	.+32     	; 0x148a <__mulsf3_pse+0xa0>
    146a:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__fp_inf>
    146e:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__fp_szero>
    1472:	5f 3f       	cpi	r21, 0xFF	; 255
    1474:	e4 f3       	brlt	.-8      	; 0x146e <__mulsf3_pse+0x84>
    1476:	98 3e       	cpi	r25, 0xE8	; 232
    1478:	d4 f3       	brlt	.-12     	; 0x146e <__mulsf3_pse+0x84>
    147a:	86 95       	lsr	r24
    147c:	77 95       	ror	r23
    147e:	67 95       	ror	r22
    1480:	b7 95       	ror	r27
    1482:	f7 95       	ror	r31
    1484:	e7 95       	ror	r30
    1486:	9f 5f       	subi	r25, 0xFF	; 255
    1488:	c1 f7       	brne	.-16     	; 0x147a <__mulsf3_pse+0x90>
    148a:	fe 2b       	or	r31, r30
    148c:	88 0f       	add	r24, r24
    148e:	91 1d       	adc	r25, r1
    1490:	96 95       	lsr	r25
    1492:	87 95       	ror	r24
    1494:	97 f9       	bld	r25, 7
    1496:	08 95       	ret

00001498 <dtostrf>:
    1498:	ef 92       	push	r14
    149a:	0f 93       	push	r16
    149c:	1f 93       	push	r17
    149e:	cf 93       	push	r28
    14a0:	df 93       	push	r29
    14a2:	e8 01       	movw	r28, r16
    14a4:	47 fd       	sbrc	r20, 7
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <dtostrf+0x14>
    14a8:	34 e0       	ldi	r19, 0x04	; 4
    14aa:	01 c0       	rjmp	.+2      	; 0x14ae <dtostrf+0x16>
    14ac:	34 e1       	ldi	r19, 0x14	; 20
    14ae:	04 2e       	mov	r0, r20
    14b0:	00 0c       	add	r0, r0
    14b2:	55 0b       	sbc	r21, r21
    14b4:	57 ff       	sbrs	r21, 7
    14b6:	03 c0       	rjmp	.+6      	; 0x14be <dtostrf+0x26>
    14b8:	51 95       	neg	r21
    14ba:	41 95       	neg	r20
    14bc:	51 09       	sbc	r21, r1
    14be:	e3 2e       	mov	r14, r19
    14c0:	02 2f       	mov	r16, r18
    14c2:	24 2f       	mov	r18, r20
    14c4:	ae 01       	movw	r20, r28
    14c6:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <dtoa_prf>
    14ca:	ce 01       	movw	r24, r28
    14cc:	df 91       	pop	r29
    14ce:	cf 91       	pop	r28
    14d0:	1f 91       	pop	r17
    14d2:	0f 91       	pop	r16
    14d4:	ef 90       	pop	r14
    14d6:	08 95       	ret

000014d8 <dtoa_prf>:
    14d8:	a9 e0       	ldi	r26, 0x09	; 9
    14da:	b0 e0       	ldi	r27, 0x00	; 0
    14dc:	e2 e7       	ldi	r30, 0x72	; 114
    14de:	fa e0       	ldi	r31, 0x0A	; 10
    14e0:	0c 94 a4 0c 	jmp	0x1948	; 0x1948 <__prologue_saves__+0xc>
    14e4:	6a 01       	movw	r12, r20
    14e6:	12 2f       	mov	r17, r18
    14e8:	b0 2e       	mov	r11, r16
    14ea:	2b e3       	ldi	r18, 0x3B	; 59
    14ec:	20 17       	cp	r18, r16
    14ee:	20 f0       	brcs	.+8      	; 0x14f8 <dtoa_prf+0x20>
    14f0:	ff 24       	eor	r15, r15
    14f2:	f3 94       	inc	r15
    14f4:	f0 0e       	add	r15, r16
    14f6:	02 c0       	rjmp	.+4      	; 0x14fc <dtoa_prf+0x24>
    14f8:	2c e3       	ldi	r18, 0x3C	; 60
    14fa:	f2 2e       	mov	r15, r18
    14fc:	0f 2d       	mov	r16, r15
    14fe:	27 e0       	ldi	r18, 0x07	; 7
    1500:	ae 01       	movw	r20, r28
    1502:	4f 5f       	subi	r20, 0xFF	; 255
    1504:	5f 4f       	sbci	r21, 0xFF	; 255
    1506:	0e 94 c6 0b 	call	0x178c	; 0x178c <__ftoa_engine>
    150a:	bc 01       	movw	r22, r24
    150c:	49 81       	ldd	r20, Y+1	; 0x01
    150e:	84 2f       	mov	r24, r20
    1510:	89 70       	andi	r24, 0x09	; 9
    1512:	81 30       	cpi	r24, 0x01	; 1
    1514:	31 f0       	breq	.+12     	; 0x1522 <dtoa_prf+0x4a>
    1516:	e1 fc       	sbrc	r14, 1
    1518:	06 c0       	rjmp	.+12     	; 0x1526 <dtoa_prf+0x4e>
    151a:	e0 fe       	sbrs	r14, 0
    151c:	06 c0       	rjmp	.+12     	; 0x152a <dtoa_prf+0x52>
    151e:	90 e2       	ldi	r25, 0x20	; 32
    1520:	05 c0       	rjmp	.+10     	; 0x152c <dtoa_prf+0x54>
    1522:	9d e2       	ldi	r25, 0x2D	; 45
    1524:	03 c0       	rjmp	.+6      	; 0x152c <dtoa_prf+0x54>
    1526:	9b e2       	ldi	r25, 0x2B	; 43
    1528:	01 c0       	rjmp	.+2      	; 0x152c <dtoa_prf+0x54>
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	5e 2d       	mov	r21, r14
    152e:	50 71       	andi	r21, 0x10	; 16
    1530:	43 ff       	sbrs	r20, 3
    1532:	3c c0       	rjmp	.+120    	; 0x15ac <dtoa_prf+0xd4>
    1534:	91 11       	cpse	r25, r1
    1536:	02 c0       	rjmp	.+4      	; 0x153c <dtoa_prf+0x64>
    1538:	83 e0       	ldi	r24, 0x03	; 3
    153a:	01 c0       	rjmp	.+2      	; 0x153e <dtoa_prf+0x66>
    153c:	84 e0       	ldi	r24, 0x04	; 4
    153e:	81 17       	cp	r24, r17
    1540:	18 f4       	brcc	.+6      	; 0x1548 <dtoa_prf+0x70>
    1542:	21 2f       	mov	r18, r17
    1544:	28 1b       	sub	r18, r24
    1546:	01 c0       	rjmp	.+2      	; 0x154a <dtoa_prf+0x72>
    1548:	20 e0       	ldi	r18, 0x00	; 0
    154a:	51 11       	cpse	r21, r1
    154c:	0b c0       	rjmp	.+22     	; 0x1564 <dtoa_prf+0x8c>
    154e:	f6 01       	movw	r30, r12
    1550:	82 2f       	mov	r24, r18
    1552:	30 e2       	ldi	r19, 0x20	; 32
    1554:	88 23       	and	r24, r24
    1556:	19 f0       	breq	.+6      	; 0x155e <dtoa_prf+0x86>
    1558:	31 93       	st	Z+, r19
    155a:	81 50       	subi	r24, 0x01	; 1
    155c:	fb cf       	rjmp	.-10     	; 0x1554 <dtoa_prf+0x7c>
    155e:	c2 0e       	add	r12, r18
    1560:	d1 1c       	adc	r13, r1
    1562:	20 e0       	ldi	r18, 0x00	; 0
    1564:	99 23       	and	r25, r25
    1566:	29 f0       	breq	.+10     	; 0x1572 <dtoa_prf+0x9a>
    1568:	d6 01       	movw	r26, r12
    156a:	9c 93       	st	X, r25
    156c:	f6 01       	movw	r30, r12
    156e:	31 96       	adiw	r30, 0x01	; 1
    1570:	6f 01       	movw	r12, r30
    1572:	c6 01       	movw	r24, r12
    1574:	03 96       	adiw	r24, 0x03	; 3
    1576:	e2 fe       	sbrs	r14, 2
    1578:	0a c0       	rjmp	.+20     	; 0x158e <dtoa_prf+0xb6>
    157a:	3e e4       	ldi	r19, 0x4E	; 78
    157c:	d6 01       	movw	r26, r12
    157e:	3c 93       	st	X, r19
    1580:	41 e4       	ldi	r20, 0x41	; 65
    1582:	11 96       	adiw	r26, 0x01	; 1
    1584:	4c 93       	st	X, r20
    1586:	11 97       	sbiw	r26, 0x01	; 1
    1588:	12 96       	adiw	r26, 0x02	; 2
    158a:	3c 93       	st	X, r19
    158c:	06 c0       	rjmp	.+12     	; 0x159a <dtoa_prf+0xc2>
    158e:	3e e6       	ldi	r19, 0x6E	; 110
    1590:	f6 01       	movw	r30, r12
    1592:	30 83       	st	Z, r19
    1594:	41 e6       	ldi	r20, 0x61	; 97
    1596:	41 83       	std	Z+1, r20	; 0x01
    1598:	32 83       	std	Z+2, r19	; 0x02
    159a:	fc 01       	movw	r30, r24
    159c:	32 2f       	mov	r19, r18
    159e:	40 e2       	ldi	r20, 0x20	; 32
    15a0:	33 23       	and	r19, r19
    15a2:	09 f4       	brne	.+2      	; 0x15a6 <dtoa_prf+0xce>
    15a4:	42 c0       	rjmp	.+132    	; 0x162a <dtoa_prf+0x152>
    15a6:	41 93       	st	Z+, r20
    15a8:	31 50       	subi	r19, 0x01	; 1
    15aa:	fa cf       	rjmp	.-12     	; 0x15a0 <dtoa_prf+0xc8>
    15ac:	42 ff       	sbrs	r20, 2
    15ae:	44 c0       	rjmp	.+136    	; 0x1638 <dtoa_prf+0x160>
    15b0:	91 11       	cpse	r25, r1
    15b2:	02 c0       	rjmp	.+4      	; 0x15b8 <dtoa_prf+0xe0>
    15b4:	83 e0       	ldi	r24, 0x03	; 3
    15b6:	01 c0       	rjmp	.+2      	; 0x15ba <dtoa_prf+0xe2>
    15b8:	84 e0       	ldi	r24, 0x04	; 4
    15ba:	81 17       	cp	r24, r17
    15bc:	18 f4       	brcc	.+6      	; 0x15c4 <dtoa_prf+0xec>
    15be:	21 2f       	mov	r18, r17
    15c0:	28 1b       	sub	r18, r24
    15c2:	01 c0       	rjmp	.+2      	; 0x15c6 <dtoa_prf+0xee>
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	51 11       	cpse	r21, r1
    15c8:	0b c0       	rjmp	.+22     	; 0x15e0 <dtoa_prf+0x108>
    15ca:	f6 01       	movw	r30, r12
    15cc:	82 2f       	mov	r24, r18
    15ce:	30 e2       	ldi	r19, 0x20	; 32
    15d0:	88 23       	and	r24, r24
    15d2:	19 f0       	breq	.+6      	; 0x15da <dtoa_prf+0x102>
    15d4:	31 93       	st	Z+, r19
    15d6:	81 50       	subi	r24, 0x01	; 1
    15d8:	fb cf       	rjmp	.-10     	; 0x15d0 <dtoa_prf+0xf8>
    15da:	c2 0e       	add	r12, r18
    15dc:	d1 1c       	adc	r13, r1
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	99 23       	and	r25, r25
    15e2:	29 f0       	breq	.+10     	; 0x15ee <dtoa_prf+0x116>
    15e4:	d6 01       	movw	r26, r12
    15e6:	9c 93       	st	X, r25
    15e8:	f6 01       	movw	r30, r12
    15ea:	31 96       	adiw	r30, 0x01	; 1
    15ec:	6f 01       	movw	r12, r30
    15ee:	c6 01       	movw	r24, r12
    15f0:	03 96       	adiw	r24, 0x03	; 3
    15f2:	e2 fe       	sbrs	r14, 2
    15f4:	0b c0       	rjmp	.+22     	; 0x160c <dtoa_prf+0x134>
    15f6:	39 e4       	ldi	r19, 0x49	; 73
    15f8:	d6 01       	movw	r26, r12
    15fa:	3c 93       	st	X, r19
    15fc:	3e e4       	ldi	r19, 0x4E	; 78
    15fe:	11 96       	adiw	r26, 0x01	; 1
    1600:	3c 93       	st	X, r19
    1602:	11 97       	sbiw	r26, 0x01	; 1
    1604:	36 e4       	ldi	r19, 0x46	; 70
    1606:	12 96       	adiw	r26, 0x02	; 2
    1608:	3c 93       	st	X, r19
    160a:	07 c0       	rjmp	.+14     	; 0x161a <dtoa_prf+0x142>
    160c:	39 e6       	ldi	r19, 0x69	; 105
    160e:	f6 01       	movw	r30, r12
    1610:	30 83       	st	Z, r19
    1612:	3e e6       	ldi	r19, 0x6E	; 110
    1614:	31 83       	std	Z+1, r19	; 0x01
    1616:	36 e6       	ldi	r19, 0x66	; 102
    1618:	32 83       	std	Z+2, r19	; 0x02
    161a:	fc 01       	movw	r30, r24
    161c:	32 2f       	mov	r19, r18
    161e:	40 e2       	ldi	r20, 0x20	; 32
    1620:	33 23       	and	r19, r19
    1622:	19 f0       	breq	.+6      	; 0x162a <dtoa_prf+0x152>
    1624:	41 93       	st	Z+, r20
    1626:	31 50       	subi	r19, 0x01	; 1
    1628:	fb cf       	rjmp	.-10     	; 0x1620 <dtoa_prf+0x148>
    162a:	fc 01       	movw	r30, r24
    162c:	e2 0f       	add	r30, r18
    162e:	f1 1d       	adc	r31, r1
    1630:	10 82       	st	Z, r1
    1632:	8e ef       	ldi	r24, 0xFE	; 254
    1634:	9f ef       	ldi	r25, 0xFF	; 255
    1636:	a6 c0       	rjmp	.+332    	; 0x1784 <dtoa_prf+0x2ac>
    1638:	21 e0       	ldi	r18, 0x01	; 1
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	91 11       	cpse	r25, r1
    163e:	02 c0       	rjmp	.+4      	; 0x1644 <dtoa_prf+0x16c>
    1640:	20 e0       	ldi	r18, 0x00	; 0
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	16 16       	cp	r1, r22
    1646:	17 06       	cpc	r1, r23
    1648:	1c f4       	brge	.+6      	; 0x1650 <dtoa_prf+0x178>
    164a:	fb 01       	movw	r30, r22
    164c:	31 96       	adiw	r30, 0x01	; 1
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <dtoa_prf+0x17c>
    1650:	e1 e0       	ldi	r30, 0x01	; 1
    1652:	f0 e0       	ldi	r31, 0x00	; 0
    1654:	2e 0f       	add	r18, r30
    1656:	3f 1f       	adc	r19, r31
    1658:	bb 20       	and	r11, r11
    165a:	21 f0       	breq	.+8      	; 0x1664 <dtoa_prf+0x18c>
    165c:	eb 2d       	mov	r30, r11
    165e:	f0 e0       	ldi	r31, 0x00	; 0
    1660:	31 96       	adiw	r30, 0x01	; 1
    1662:	02 c0       	rjmp	.+4      	; 0x1668 <dtoa_prf+0x190>
    1664:	e0 e0       	ldi	r30, 0x00	; 0
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	2e 0f       	add	r18, r30
    166a:	3f 1f       	adc	r19, r31
    166c:	e1 2f       	mov	r30, r17
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	2e 17       	cp	r18, r30
    1672:	3f 07       	cpc	r19, r31
    1674:	1c f4       	brge	.+6      	; 0x167c <dtoa_prf+0x1a4>
    1676:	12 1b       	sub	r17, r18
    1678:	21 2f       	mov	r18, r17
    167a:	01 c0       	rjmp	.+2      	; 0x167e <dtoa_prf+0x1a6>
    167c:	20 e0       	ldi	r18, 0x00	; 0
    167e:	8e 2d       	mov	r24, r14
    1680:	88 71       	andi	r24, 0x18	; 24
    1682:	59 f4       	brne	.+22     	; 0x169a <dtoa_prf+0x1c2>
    1684:	f6 01       	movw	r30, r12
    1686:	82 2f       	mov	r24, r18
    1688:	30 e2       	ldi	r19, 0x20	; 32
    168a:	88 23       	and	r24, r24
    168c:	19 f0       	breq	.+6      	; 0x1694 <dtoa_prf+0x1bc>
    168e:	31 93       	st	Z+, r19
    1690:	81 50       	subi	r24, 0x01	; 1
    1692:	fb cf       	rjmp	.-10     	; 0x168a <dtoa_prf+0x1b2>
    1694:	c2 0e       	add	r12, r18
    1696:	d1 1c       	adc	r13, r1
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	99 23       	and	r25, r25
    169c:	29 f0       	breq	.+10     	; 0x16a8 <dtoa_prf+0x1d0>
    169e:	d6 01       	movw	r26, r12
    16a0:	9c 93       	st	X, r25
    16a2:	f6 01       	movw	r30, r12
    16a4:	31 96       	adiw	r30, 0x01	; 1
    16a6:	6f 01       	movw	r12, r30
    16a8:	51 11       	cpse	r21, r1
    16aa:	0b c0       	rjmp	.+22     	; 0x16c2 <dtoa_prf+0x1ea>
    16ac:	f6 01       	movw	r30, r12
    16ae:	82 2f       	mov	r24, r18
    16b0:	90 e3       	ldi	r25, 0x30	; 48
    16b2:	88 23       	and	r24, r24
    16b4:	19 f0       	breq	.+6      	; 0x16bc <dtoa_prf+0x1e4>
    16b6:	91 93       	st	Z+, r25
    16b8:	81 50       	subi	r24, 0x01	; 1
    16ba:	fb cf       	rjmp	.-10     	; 0x16b2 <dtoa_prf+0x1da>
    16bc:	c2 0e       	add	r12, r18
    16be:	d1 1c       	adc	r13, r1
    16c0:	20 e0       	ldi	r18, 0x00	; 0
    16c2:	0f 2d       	mov	r16, r15
    16c4:	06 0f       	add	r16, r22
    16c6:	9a 81       	ldd	r25, Y+2	; 0x02
    16c8:	34 2f       	mov	r19, r20
    16ca:	30 71       	andi	r19, 0x10	; 16
    16cc:	44 ff       	sbrs	r20, 4
    16ce:	03 c0       	rjmp	.+6      	; 0x16d6 <dtoa_prf+0x1fe>
    16d0:	91 33       	cpi	r25, 0x31	; 49
    16d2:	09 f4       	brne	.+2      	; 0x16d6 <dtoa_prf+0x1fe>
    16d4:	01 50       	subi	r16, 0x01	; 1
    16d6:	10 16       	cp	r1, r16
    16d8:	24 f4       	brge	.+8      	; 0x16e2 <dtoa_prf+0x20a>
    16da:	09 30       	cpi	r16, 0x09	; 9
    16dc:	18 f0       	brcs	.+6      	; 0x16e4 <dtoa_prf+0x20c>
    16de:	08 e0       	ldi	r16, 0x08	; 8
    16e0:	01 c0       	rjmp	.+2      	; 0x16e4 <dtoa_prf+0x20c>
    16e2:	01 e0       	ldi	r16, 0x01	; 1
    16e4:	ab 01       	movw	r20, r22
    16e6:	77 ff       	sbrs	r23, 7
    16e8:	02 c0       	rjmp	.+4      	; 0x16ee <dtoa_prf+0x216>
    16ea:	40 e0       	ldi	r20, 0x00	; 0
    16ec:	50 e0       	ldi	r21, 0x00	; 0
    16ee:	fb 01       	movw	r30, r22
    16f0:	e4 1b       	sub	r30, r20
    16f2:	f5 0b       	sbc	r31, r21
    16f4:	a1 e0       	ldi	r26, 0x01	; 1
    16f6:	b0 e0       	ldi	r27, 0x00	; 0
    16f8:	ac 0f       	add	r26, r28
    16fa:	bd 1f       	adc	r27, r29
    16fc:	ea 0f       	add	r30, r26
    16fe:	fb 1f       	adc	r31, r27
    1700:	8e e2       	ldi	r24, 0x2E	; 46
    1702:	a8 2e       	mov	r10, r24
    1704:	4b 01       	movw	r8, r22
    1706:	80 1a       	sub	r8, r16
    1708:	91 08       	sbc	r9, r1
    170a:	0b 2d       	mov	r16, r11
    170c:	10 e0       	ldi	r17, 0x00	; 0
    170e:	11 95       	neg	r17
    1710:	01 95       	neg	r16
    1712:	11 09       	sbc	r17, r1
    1714:	4f 3f       	cpi	r20, 0xFF	; 255
    1716:	bf ef       	ldi	r27, 0xFF	; 255
    1718:	5b 07       	cpc	r21, r27
    171a:	21 f4       	brne	.+8      	; 0x1724 <dtoa_prf+0x24c>
    171c:	d6 01       	movw	r26, r12
    171e:	ac 92       	st	X, r10
    1720:	11 96       	adiw	r26, 0x01	; 1
    1722:	6d 01       	movw	r12, r26
    1724:	64 17       	cp	r22, r20
    1726:	75 07       	cpc	r23, r21
    1728:	2c f0       	brlt	.+10     	; 0x1734 <dtoa_prf+0x25c>
    172a:	84 16       	cp	r8, r20
    172c:	95 06       	cpc	r9, r21
    172e:	14 f4       	brge	.+4      	; 0x1734 <dtoa_prf+0x25c>
    1730:	81 81       	ldd	r24, Z+1	; 0x01
    1732:	01 c0       	rjmp	.+2      	; 0x1736 <dtoa_prf+0x25e>
    1734:	80 e3       	ldi	r24, 0x30	; 48
    1736:	41 50       	subi	r20, 0x01	; 1
    1738:	51 09       	sbc	r21, r1
    173a:	31 96       	adiw	r30, 0x01	; 1
    173c:	d6 01       	movw	r26, r12
    173e:	11 96       	adiw	r26, 0x01	; 1
    1740:	7d 01       	movw	r14, r26
    1742:	40 17       	cp	r20, r16
    1744:	51 07       	cpc	r21, r17
    1746:	24 f0       	brlt	.+8      	; 0x1750 <dtoa_prf+0x278>
    1748:	d6 01       	movw	r26, r12
    174a:	8c 93       	st	X, r24
    174c:	67 01       	movw	r12, r14
    174e:	e2 cf       	rjmp	.-60     	; 0x1714 <dtoa_prf+0x23c>
    1750:	64 17       	cp	r22, r20
    1752:	75 07       	cpc	r23, r21
    1754:	39 f4       	brne	.+14     	; 0x1764 <dtoa_prf+0x28c>
    1756:	96 33       	cpi	r25, 0x36	; 54
    1758:	20 f4       	brcc	.+8      	; 0x1762 <dtoa_prf+0x28a>
    175a:	95 33       	cpi	r25, 0x35	; 53
    175c:	19 f4       	brne	.+6      	; 0x1764 <dtoa_prf+0x28c>
    175e:	31 11       	cpse	r19, r1
    1760:	01 c0       	rjmp	.+2      	; 0x1764 <dtoa_prf+0x28c>
    1762:	81 e3       	ldi	r24, 0x31	; 49
    1764:	f6 01       	movw	r30, r12
    1766:	80 83       	st	Z, r24
    1768:	f7 01       	movw	r30, r14
    176a:	82 2f       	mov	r24, r18
    176c:	90 e2       	ldi	r25, 0x20	; 32
    176e:	88 23       	and	r24, r24
    1770:	19 f0       	breq	.+6      	; 0x1778 <dtoa_prf+0x2a0>
    1772:	91 93       	st	Z+, r25
    1774:	81 50       	subi	r24, 0x01	; 1
    1776:	fb cf       	rjmp	.-10     	; 0x176e <dtoa_prf+0x296>
    1778:	f7 01       	movw	r30, r14
    177a:	e2 0f       	add	r30, r18
    177c:	f1 1d       	adc	r31, r1
    177e:	10 82       	st	Z, r1
    1780:	80 e0       	ldi	r24, 0x00	; 0
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	29 96       	adiw	r28, 0x09	; 9
    1786:	ec e0       	ldi	r30, 0x0C	; 12
    1788:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__epilogue_restores__+0xc>

0000178c <__ftoa_engine>:
    178c:	28 30       	cpi	r18, 0x08	; 8
    178e:	08 f0       	brcs	.+2      	; 0x1792 <__ftoa_engine+0x6>
    1790:	27 e0       	ldi	r18, 0x07	; 7
    1792:	33 27       	eor	r19, r19
    1794:	da 01       	movw	r26, r20
    1796:	99 0f       	add	r25, r25
    1798:	31 1d       	adc	r19, r1
    179a:	87 fd       	sbrc	r24, 7
    179c:	91 60       	ori	r25, 0x01	; 1
    179e:	00 96       	adiw	r24, 0x00	; 0
    17a0:	61 05       	cpc	r22, r1
    17a2:	71 05       	cpc	r23, r1
    17a4:	39 f4       	brne	.+14     	; 0x17b4 <__ftoa_engine+0x28>
    17a6:	32 60       	ori	r19, 0x02	; 2
    17a8:	2e 5f       	subi	r18, 0xFE	; 254
    17aa:	3d 93       	st	X+, r19
    17ac:	30 e3       	ldi	r19, 0x30	; 48
    17ae:	2a 95       	dec	r18
    17b0:	e1 f7       	brne	.-8      	; 0x17aa <__ftoa_engine+0x1e>
    17b2:	08 95       	ret
    17b4:	9f 3f       	cpi	r25, 0xFF	; 255
    17b6:	30 f0       	brcs	.+12     	; 0x17c4 <__ftoa_engine+0x38>
    17b8:	80 38       	cpi	r24, 0x80	; 128
    17ba:	71 05       	cpc	r23, r1
    17bc:	61 05       	cpc	r22, r1
    17be:	09 f0       	breq	.+2      	; 0x17c2 <__ftoa_engine+0x36>
    17c0:	3c 5f       	subi	r19, 0xFC	; 252
    17c2:	3c 5f       	subi	r19, 0xFC	; 252
    17c4:	3d 93       	st	X+, r19
    17c6:	91 30       	cpi	r25, 0x01	; 1
    17c8:	08 f0       	brcs	.+2      	; 0x17cc <__ftoa_engine+0x40>
    17ca:	80 68       	ori	r24, 0x80	; 128
    17cc:	91 1d       	adc	r25, r1
    17ce:	df 93       	push	r29
    17d0:	cf 93       	push	r28
    17d2:	1f 93       	push	r17
    17d4:	0f 93       	push	r16
    17d6:	ff 92       	push	r15
    17d8:	ef 92       	push	r14
    17da:	19 2f       	mov	r17, r25
    17dc:	98 7f       	andi	r25, 0xF8	; 248
    17de:	96 95       	lsr	r25
    17e0:	e9 2f       	mov	r30, r25
    17e2:	96 95       	lsr	r25
    17e4:	96 95       	lsr	r25
    17e6:	e9 0f       	add	r30, r25
    17e8:	ff 27       	eor	r31, r31
    17ea:	e2 55       	subi	r30, 0x52	; 82
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	99 27       	eor	r25, r25
    17f0:	33 27       	eor	r19, r19
    17f2:	ee 24       	eor	r14, r14
    17f4:	ff 24       	eor	r15, r15
    17f6:	a7 01       	movw	r20, r14
    17f8:	e7 01       	movw	r28, r14
    17fa:	05 90       	lpm	r0, Z+
    17fc:	08 94       	sec
    17fe:	07 94       	ror	r0
    1800:	28 f4       	brcc	.+10     	; 0x180c <__ftoa_engine+0x80>
    1802:	36 0f       	add	r19, r22
    1804:	e7 1e       	adc	r14, r23
    1806:	f8 1e       	adc	r15, r24
    1808:	49 1f       	adc	r20, r25
    180a:	51 1d       	adc	r21, r1
    180c:	66 0f       	add	r22, r22
    180e:	77 1f       	adc	r23, r23
    1810:	88 1f       	adc	r24, r24
    1812:	99 1f       	adc	r25, r25
    1814:	06 94       	lsr	r0
    1816:	a1 f7       	brne	.-24     	; 0x1800 <__ftoa_engine+0x74>
    1818:	05 90       	lpm	r0, Z+
    181a:	07 94       	ror	r0
    181c:	28 f4       	brcc	.+10     	; 0x1828 <__ftoa_engine+0x9c>
    181e:	e7 0e       	add	r14, r23
    1820:	f8 1e       	adc	r15, r24
    1822:	49 1f       	adc	r20, r25
    1824:	56 1f       	adc	r21, r22
    1826:	c1 1d       	adc	r28, r1
    1828:	77 0f       	add	r23, r23
    182a:	88 1f       	adc	r24, r24
    182c:	99 1f       	adc	r25, r25
    182e:	66 1f       	adc	r22, r22
    1830:	06 94       	lsr	r0
    1832:	a1 f7       	brne	.-24     	; 0x181c <__ftoa_engine+0x90>
    1834:	05 90       	lpm	r0, Z+
    1836:	07 94       	ror	r0
    1838:	28 f4       	brcc	.+10     	; 0x1844 <__ftoa_engine+0xb8>
    183a:	f8 0e       	add	r15, r24
    183c:	49 1f       	adc	r20, r25
    183e:	56 1f       	adc	r21, r22
    1840:	c7 1f       	adc	r28, r23
    1842:	d1 1d       	adc	r29, r1
    1844:	88 0f       	add	r24, r24
    1846:	99 1f       	adc	r25, r25
    1848:	66 1f       	adc	r22, r22
    184a:	77 1f       	adc	r23, r23
    184c:	06 94       	lsr	r0
    184e:	a1 f7       	brne	.-24     	; 0x1838 <__ftoa_engine+0xac>
    1850:	05 90       	lpm	r0, Z+
    1852:	07 94       	ror	r0
    1854:	20 f4       	brcc	.+8      	; 0x185e <__ftoa_engine+0xd2>
    1856:	49 0f       	add	r20, r25
    1858:	56 1f       	adc	r21, r22
    185a:	c7 1f       	adc	r28, r23
    185c:	d8 1f       	adc	r29, r24
    185e:	99 0f       	add	r25, r25
    1860:	66 1f       	adc	r22, r22
    1862:	77 1f       	adc	r23, r23
    1864:	88 1f       	adc	r24, r24
    1866:	06 94       	lsr	r0
    1868:	a9 f7       	brne	.-22     	; 0x1854 <__ftoa_engine+0xc8>
    186a:	84 91       	lpm	r24, Z
    186c:	10 95       	com	r17
    186e:	17 70       	andi	r17, 0x07	; 7
    1870:	41 f0       	breq	.+16     	; 0x1882 <__ftoa_engine+0xf6>
    1872:	d6 95       	lsr	r29
    1874:	c7 95       	ror	r28
    1876:	57 95       	ror	r21
    1878:	47 95       	ror	r20
    187a:	f7 94       	ror	r15
    187c:	e7 94       	ror	r14
    187e:	1a 95       	dec	r17
    1880:	c1 f7       	brne	.-16     	; 0x1872 <__ftoa_engine+0xe6>
    1882:	e4 e5       	ldi	r30, 0x54	; 84
    1884:	f0 e0       	ldi	r31, 0x00	; 0
    1886:	68 94       	set
    1888:	15 90       	lpm	r1, Z+
    188a:	15 91       	lpm	r17, Z+
    188c:	35 91       	lpm	r19, Z+
    188e:	65 91       	lpm	r22, Z+
    1890:	95 91       	lpm	r25, Z+
    1892:	05 90       	lpm	r0, Z+
    1894:	7f e2       	ldi	r23, 0x2F	; 47
    1896:	73 95       	inc	r23
    1898:	e1 18       	sub	r14, r1
    189a:	f1 0a       	sbc	r15, r17
    189c:	43 0b       	sbc	r20, r19
    189e:	56 0b       	sbc	r21, r22
    18a0:	c9 0b       	sbc	r28, r25
    18a2:	d0 09       	sbc	r29, r0
    18a4:	c0 f7       	brcc	.-16     	; 0x1896 <__ftoa_engine+0x10a>
    18a6:	e1 0c       	add	r14, r1
    18a8:	f1 1e       	adc	r15, r17
    18aa:	43 1f       	adc	r20, r19
    18ac:	56 1f       	adc	r21, r22
    18ae:	c9 1f       	adc	r28, r25
    18b0:	d0 1d       	adc	r29, r0
    18b2:	7e f4       	brtc	.+30     	; 0x18d2 <__ftoa_engine+0x146>
    18b4:	70 33       	cpi	r23, 0x30	; 48
    18b6:	11 f4       	brne	.+4      	; 0x18bc <__ftoa_engine+0x130>
    18b8:	8a 95       	dec	r24
    18ba:	e6 cf       	rjmp	.-52     	; 0x1888 <__ftoa_engine+0xfc>
    18bc:	e8 94       	clt
    18be:	01 50       	subi	r16, 0x01	; 1
    18c0:	30 f0       	brcs	.+12     	; 0x18ce <__ftoa_engine+0x142>
    18c2:	08 0f       	add	r16, r24
    18c4:	0a f4       	brpl	.+2      	; 0x18c8 <__ftoa_engine+0x13c>
    18c6:	00 27       	eor	r16, r16
    18c8:	02 17       	cp	r16, r18
    18ca:	08 f4       	brcc	.+2      	; 0x18ce <__ftoa_engine+0x142>
    18cc:	20 2f       	mov	r18, r16
    18ce:	23 95       	inc	r18
    18d0:	02 2f       	mov	r16, r18
    18d2:	7a 33       	cpi	r23, 0x3A	; 58
    18d4:	28 f0       	brcs	.+10     	; 0x18e0 <__ftoa_engine+0x154>
    18d6:	79 e3       	ldi	r23, 0x39	; 57
    18d8:	7d 93       	st	X+, r23
    18da:	2a 95       	dec	r18
    18dc:	e9 f7       	brne	.-6      	; 0x18d8 <__ftoa_engine+0x14c>
    18de:	10 c0       	rjmp	.+32     	; 0x1900 <__ftoa_engine+0x174>
    18e0:	7d 93       	st	X+, r23
    18e2:	2a 95       	dec	r18
    18e4:	89 f6       	brne	.-94     	; 0x1888 <__ftoa_engine+0xfc>
    18e6:	06 94       	lsr	r0
    18e8:	97 95       	ror	r25
    18ea:	67 95       	ror	r22
    18ec:	37 95       	ror	r19
    18ee:	17 95       	ror	r17
    18f0:	17 94       	ror	r1
    18f2:	e1 18       	sub	r14, r1
    18f4:	f1 0a       	sbc	r15, r17
    18f6:	43 0b       	sbc	r20, r19
    18f8:	56 0b       	sbc	r21, r22
    18fa:	c9 0b       	sbc	r28, r25
    18fc:	d0 09       	sbc	r29, r0
    18fe:	98 f0       	brcs	.+38     	; 0x1926 <__ftoa_engine+0x19a>
    1900:	23 95       	inc	r18
    1902:	7e 91       	ld	r23, -X
    1904:	73 95       	inc	r23
    1906:	7a 33       	cpi	r23, 0x3A	; 58
    1908:	08 f0       	brcs	.+2      	; 0x190c <__ftoa_engine+0x180>
    190a:	70 e3       	ldi	r23, 0x30	; 48
    190c:	7c 93       	st	X, r23
    190e:	20 13       	cpse	r18, r16
    1910:	b8 f7       	brcc	.-18     	; 0x1900 <__ftoa_engine+0x174>
    1912:	7e 91       	ld	r23, -X
    1914:	70 61       	ori	r23, 0x10	; 16
    1916:	7d 93       	st	X+, r23
    1918:	30 f0       	brcs	.+12     	; 0x1926 <__ftoa_engine+0x19a>
    191a:	83 95       	inc	r24
    191c:	71 e3       	ldi	r23, 0x31	; 49
    191e:	7d 93       	st	X+, r23
    1920:	70 e3       	ldi	r23, 0x30	; 48
    1922:	2a 95       	dec	r18
    1924:	e1 f7       	brne	.-8      	; 0x191e <__ftoa_engine+0x192>
    1926:	11 24       	eor	r1, r1
    1928:	ef 90       	pop	r14
    192a:	ff 90       	pop	r15
    192c:	0f 91       	pop	r16
    192e:	1f 91       	pop	r17
    1930:	cf 91       	pop	r28
    1932:	df 91       	pop	r29
    1934:	99 27       	eor	r25, r25
    1936:	87 fd       	sbrc	r24, 7
    1938:	90 95       	com	r25
    193a:	08 95       	ret

0000193c <__prologue_saves__>:
    193c:	2f 92       	push	r2
    193e:	3f 92       	push	r3
    1940:	4f 92       	push	r4
    1942:	5f 92       	push	r5
    1944:	6f 92       	push	r6
    1946:	7f 92       	push	r7
    1948:	8f 92       	push	r8
    194a:	9f 92       	push	r9
    194c:	af 92       	push	r10
    194e:	bf 92       	push	r11
    1950:	cf 92       	push	r12
    1952:	df 92       	push	r13
    1954:	ef 92       	push	r14
    1956:	ff 92       	push	r15
    1958:	0f 93       	push	r16
    195a:	1f 93       	push	r17
    195c:	cf 93       	push	r28
    195e:	df 93       	push	r29
    1960:	cd b7       	in	r28, 0x3d	; 61
    1962:	de b7       	in	r29, 0x3e	; 62
    1964:	ca 1b       	sub	r28, r26
    1966:	db 0b       	sbc	r29, r27
    1968:	0f b6       	in	r0, 0x3f	; 63
    196a:	f8 94       	cli
    196c:	de bf       	out	0x3e, r29	; 62
    196e:	0f be       	out	0x3f, r0	; 63
    1970:	cd bf       	out	0x3d, r28	; 61
    1972:	09 94       	ijmp

00001974 <__epilogue_restores__>:
    1974:	2a 88       	ldd	r2, Y+18	; 0x12
    1976:	39 88       	ldd	r3, Y+17	; 0x11
    1978:	48 88       	ldd	r4, Y+16	; 0x10
    197a:	5f 84       	ldd	r5, Y+15	; 0x0f
    197c:	6e 84       	ldd	r6, Y+14	; 0x0e
    197e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1980:	8c 84       	ldd	r8, Y+12	; 0x0c
    1982:	9b 84       	ldd	r9, Y+11	; 0x0b
    1984:	aa 84       	ldd	r10, Y+10	; 0x0a
    1986:	b9 84       	ldd	r11, Y+9	; 0x09
    1988:	c8 84       	ldd	r12, Y+8	; 0x08
    198a:	df 80       	ldd	r13, Y+7	; 0x07
    198c:	ee 80       	ldd	r14, Y+6	; 0x06
    198e:	fd 80       	ldd	r15, Y+5	; 0x05
    1990:	0c 81       	ldd	r16, Y+4	; 0x04
    1992:	1b 81       	ldd	r17, Y+3	; 0x03
    1994:	aa 81       	ldd	r26, Y+2	; 0x02
    1996:	b9 81       	ldd	r27, Y+1	; 0x01
    1998:	ce 0f       	add	r28, r30
    199a:	d1 1d       	adc	r29, r1
    199c:	0f b6       	in	r0, 0x3f	; 63
    199e:	f8 94       	cli
    19a0:	de bf       	out	0x3e, r29	; 62
    19a2:	0f be       	out	0x3f, r0	; 63
    19a4:	cd bf       	out	0x3d, r28	; 61
    19a6:	ed 01       	movw	r28, r26
    19a8:	08 95       	ret

000019aa <_exit>:
    19aa:	f8 94       	cli

000019ac <__stop_program>:
    19ac:	ff cf       	rjmp	.-2      	; 0x19ac <__stop_program>
